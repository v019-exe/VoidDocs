{"config":{"lang":["es"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Bienvenid@","text":"<p>Hola lector, Bienvenid@ a mis docs, te dejo un peque\u00f1o resumen de lo que hay actualmente:</p> <ul> <li> <p>Programaci\u00f3n</p> <ul> <li>Introducci\u00f3n</li> <li>PHP<ul> <li>Introducci\u00f3n</li> <li>Conexiones a Bases de Datos</li> </ul> </li> <li>JS</li> <li>Python</li> </ul> </li> <li> <p>DevOps</p> <ul> <li>Docker<ul> <li>Dockerfiles</li> <li>Docker Compose</li> <li>Comandos b\u00e1sicos</li> </ul> </li> </ul> </li> <li>Fundamentos de hardware<ul> <li>Arquitectura de sistemas</li> <li>Entornos operativos</li> <li>Aplicaciones de prop\u00f3sito general</li> </ul> </li> </ul>"},{"location":"devops/","title":"Introducci\u00f3n","text":"<p>DevOps es un enfoque moderno que combina el desarrollo de software (Development) y las operaciones de TI (Operations) para mejorar la colaboraci\u00f3n, la eficiencia y la entrega continua de aplicaciones y servicios. Su objetivo principal es automatizar procesos, acelerar los despliegues y asegurar una alta calidad en las entregas mediante la integraci\u00f3n constante de c\u00f3digo y la supervisi\u00f3n continua.</p> <p>A trav\u00e9s de estas pr\u00e1cticas, DevOps permite a los equipos ser m\u00e1s \u00e1giles y responder r\u00e1pidamente a los cambios del mercado, garantizando una infraestructura robusta y escalable. Los pilares fundamentales de DevOps incluyen la automatizaci\u00f3n, la integraci\u00f3n continua (CI), el despliegue continuo (CD), la monitorizaci\u00f3n constante y la infraestructura como c\u00f3digo (IaC).</p>"},{"location":"devops/docker/dkfile/","title":"Gu\u00eda Completa de Dockerfile","text":""},{"location":"devops/docker/dkfile/#indice","title":"\u00cdndice","text":"<ul> <li>Introducci\u00f3n</li> <li>Sintaxis B\u00e1sica</li> <li>Instrucciones Principales</li> <li>Variables y Arguments</li> <li>Buenas Pr\u00e1cticas</li> <li>Ejemplos Pr\u00e1cticos</li> </ul>"},{"location":"devops/docker/dkfile/#introduccion","title":"Introducci\u00f3n","text":"<p>Un Dockerfile es un archivo de texto que contiene las instrucciones necesarias para construir una imagen de Docker. Cada instrucci\u00f3n en el Dockerfile crea una nueva capa en la imagen.</p>"},{"location":"devops/docker/dkfile/#sintaxis-basica","title":"Sintaxis B\u00e1sica","text":"<pre><code># Comentario\nINSTRUCCI\u00d3N argumentos\n</code></pre> <ul> <li>Las instrucciones no son sensibles a may\u00fasculas, pero por convenci\u00f3n se escriben en may\u00fasculas</li> <li>Cada instrucci\u00f3n crea una nueva capa en la imagen</li> <li>Los comentarios comienzan con <code>#</code></li> </ul>"},{"location":"devops/docker/dkfile/#instrucciones-principales","title":"Instrucciones Principales","text":""},{"location":"devops/docker/dkfile/#from","title":"FROM","text":"<p>Define la imagen base. <pre><code>FROM &lt;imagen&gt;:&lt;tag&gt;\nFROM ubuntu:20.04\nFROM node:14-alpine\n</code></pre></p>"},{"location":"devops/docker/dkfile/#label","title":"LABEL","text":"<p>Agrega metadatos a la imagen. <pre><code>LABEL version=\"1.0\"\nLABEL descripcion=\"Mi aplicaci\u00f3n\"\nLABEL mantenedor=\"nombre@email.com\"\n</code></pre></p>"},{"location":"devops/docker/dkfile/#env","title":"ENV","text":"<p>Define variables de entorno. <pre><code>ENV APP_HOME=/usr/src/app\nENV PORT=3000\n</code></pre></p>"},{"location":"devops/docker/dkfile/#arg","title":"ARG","text":"<p>Define variables para el proceso de construcci\u00f3n. <pre><code>ARG VERSION=latest\nARG BUILD_DATE\n</code></pre></p>"},{"location":"devops/docker/dkfile/#workdir","title":"WORKDIR","text":"<p>Establece el directorio de trabajo. <pre><code>WORKDIR /app\nWORKDIR $APP_HOME\n</code></pre></p>"},{"location":"devops/docker/dkfile/#copy","title":"COPY","text":"<p>Copia archivos desde el host a la imagen. <pre><code>COPY archivo.txt /app/\nCOPY [\"archivo con espacios.txt\", \"/app/\"]\nCOPY . .\n</code></pre></p>"},{"location":"devops/docker/dkfile/#add","title":"ADD","text":"<p>Similar a COPY, pero con funcionalidades adicionales. <pre><code>ADD archivo.tar.gz /app/\nADD https://ejemplo.com/archivo.zip /app/\n</code></pre></p>"},{"location":"devops/docker/dkfile/#run","title":"RUN","text":"<p>Ejecuta comandos durante la construcci\u00f3n. <pre><code>RUN apt-get update &amp;&amp; \\\n    apt-get install -y nginx\nRUN [\"npm\", \"install\"]\n</code></pre></p>"},{"location":"devops/docker/dkfile/#cmd","title":"CMD","text":"<p>Define el comando por defecto al ejecutar el contenedor. <pre><code>CMD [\"nginx\", \"-g\", \"daemon off;\"]\nCMD [\"npm\", \"start\"]\nCMD /script.sh\n</code></pre></p>"},{"location":"devops/docker/dkfile/#entrypoint","title":"ENTRYPOINT","text":"<p>Define el ejecutable principal del contenedor. <pre><code>ENTRYPOINT [\"nginx\"]\nENTRYPOINT [\"node\", \"app.js\"]\n</code></pre></p>"},{"location":"devops/docker/dkfile/#expose","title":"EXPOSE","text":"<p>Documenta los puertos que escucha el contenedor. <pre><code>EXPOSE 80\nEXPOSE 3000/tcp\nEXPOSE 53/udp\n</code></pre></p>"},{"location":"devops/docker/dkfile/#volume","title":"VOLUME","text":"<p>Define puntos de montaje para vol\u00famenes. <pre><code>VOLUME /data\nVOLUME [\"/data\", \"/logs\"]\n</code></pre></p>"},{"location":"devops/docker/dkfile/#user","title":"USER","text":"<p>Define el usuario para ejecutar comandos. <pre><code>USER nginx\nUSER 1000:1000\n</code></pre></p>"},{"location":"devops/docker/dkfile/#healthcheck","title":"HEALTHCHECK","text":"<p>Define comando para verificar la salud del contenedor. <pre><code>HEALTHCHECK --interval=30s --timeout=3s \\\n  CMD curl -f http://localhost/ || exit 1\n</code></pre></p>"},{"location":"devops/docker/dkfile/#shell","title":"SHELL","text":"<p>Define el shell por defecto para comandos. <pre><code>SHELL [\"/bin/bash\", \"-c\"]\n</code></pre></p>"},{"location":"devops/docker/dkfile/#stopsignal","title":"STOPSIGNAL","text":"<p>Define la se\u00f1al para detener el contenedor. <pre><code>STOPSIGNAL SIGTERM\n</code></pre></p>"},{"location":"devops/docker/dkfile/#variables-y-arguments","title":"Variables y Arguments","text":""},{"location":"devops/docker/dkfile/#variables-de-entorno","title":"Variables de Entorno","text":"<pre><code># Definici\u00f3n de variables\nENV APP_VERSION=1.0\nENV APP_PORT=3000\n\n# Uso de variables\nEXPOSE $APP_PORT\n</code></pre>"},{"location":"devops/docker/dkfile/#build-arguments","title":"Build Arguments","text":"<pre><code># Definici\u00f3n de argumentos\nARG BUILD_VERSION\nARG ENVIRONMENT=production\n\n# Uso de argumentos\nLABEL version=${BUILD_VERSION}\n</code></pre>"},{"location":"devops/docker/dkfile/#buenas-practicas","title":"Buenas Pr\u00e1cticas","text":""},{"location":"devops/docker/dkfile/#1-optimizacion-de-capas","title":"1. Optimizaci\u00f3n de Capas","text":"<pre><code># Mal\nRUN apt-get update\nRUN apt-get install -y nginx\nRUN apt-get clean\n\n# Bien\nRUN apt-get update &amp;&amp; \\\n    apt-get install -y nginx &amp;&amp; \\\n    apt-get clean &amp;&amp; \\\n    rm -rf /var/lib/apt/lists/*\n</code></pre>"},{"location":"devops/docker/dkfile/#2-multi-stage-builds","title":"2. Multi-stage Builds","text":"<pre><code># Etapa de compilaci\u00f3n\nFROM node:14 AS builder\nWORKDIR /app\nCOPY package*.json ./\nRUN npm install\nCOPY . .\nRUN npm run build\n\n# Etapa de producci\u00f3n\nFROM node:14-alpine\nWORKDIR /app\nCOPY --from=builder /app/dist ./dist\nCMD [\"node\", \"dist/main.js\"]\n</code></pre>"},{"location":"devops/docker/dkfile/#3-ordenamiento-de-capas","title":"3. Ordenamiento de Capas","text":"<pre><code># Ordenar de menos a m\u00e1s frecuentemente cambiante\nFROM node:14-alpine\n\n# 1. Instalar dependencias del sistema\nRUN apk add --no-cache python3\n\n# 2. Instalar dependencias de la aplicaci\u00f3n\nCOPY package*.json ./\nRUN npm install\n\n# 3. Copiar c\u00f3digo fuente\nCOPY . .\n</code></pre>"},{"location":"devops/docker/dkfile/#4-uso-de-dockerignore","title":"4. Uso de .dockerignore","text":"<pre><code># .dockerignore\nnode_modules\nnpm-debug.log\nDockerfile\n.git\n.gitignore\n</code></pre>"},{"location":"devops/docker/dkfile/#ejemplos-practicos","title":"Ejemplos Pr\u00e1cticos","text":""},{"location":"devops/docker/dkfile/#aplicacion-nodejs","title":"Aplicaci\u00f3n Node.js","text":"<pre><code>FROM node:14-alpine\n\n# Metadatos\nLABEL version=\"1.0.0\"\nLABEL description=\"Aplicaci\u00f3n Node.js de ejemplo\"\n\n# Variables de entorno\nENV NODE_ENV=production\nENV PORT=3000\n\n# Directorio de trabajo\nWORKDIR /usr/src/app\n\n# Instalaci\u00f3n de dependencias\nCOPY package*.json ./\nRUN npm ci --only=production\n\n# C\u00f3digo fuente\nCOPY . .\n\n# Puerto\nEXPOSE $PORT\n\n# Comando de inicio\nCMD [\"node\", \"server.js\"]\n</code></pre>"},{"location":"devops/docker/dkfile/#aplicacion-python-con-django","title":"Aplicaci\u00f3n Python con Django","text":"<pre><code>FROM python:3.9-slim\n\n# Variables de entorno\nENV PYTHONUNBUFFERED=1\nENV DJANGO_SETTINGS_MODULE=myproject.settings\n\n# Directorio de trabajo\nWORKDIR /app\n\n# Dependencias del sistema\nRUN apt-get update &amp;&amp; \\\n    apt-get install -y --no-install-recommends \\\n    gcc \\\n    postgresql-client \\\n    &amp;&amp; rm -rf /var/lib/apt/lists/*\n\n# Dependencias Python\nCOPY requirements.txt .\nRUN pip install --no-cache-dir -r requirements.txt\n\n# C\u00f3digo fuente\nCOPY . .\n\n# Puerto\nEXPOSE 8000\n\n# Comando de inicio\nCMD [\"gunicorn\", \"myproject.wsgi:application\", \"--bind\", \"0.0.0.0:8000\"]\n</code></pre>"},{"location":"devops/docker/dkfile/#aplicacion-java-con-maven","title":"Aplicaci\u00f3n Java con Maven","text":"<pre><code># Etapa de compilaci\u00f3n\nFROM maven:3.8-openjdk-11 AS builder\n\nWORKDIR /app\nCOPY pom.xml .\nCOPY src ./src\n\nRUN mvn clean package -DskipTests\n\n# Etapa de producci\u00f3n\nFROM openjdk:11-jre-slim\n\nWORKDIR /app\nCOPY --from=builder /app/target/*.jar app.jar\n\nEXPOSE 8080\nENTRYPOINT [\"java\", \"-jar\", \"app.jar\"]\n</code></pre>"},{"location":"devops/docker/dkfile/#variables-especiales","title":"Variables Especiales","text":""},{"location":"devops/docker/dkfile/#variables-predefinidas","title":"Variables Predefinidas","text":"<pre><code>ARG\n- ${}       # Referencia a variable\n- $?        # C\u00f3digo de salida del \u00faltimo comando\n- $$        # PID del shell actual\n</code></pre>"},{"location":"devops/docker/dkfile/#variables-en-tiempo-de-construccion","title":"Variables en Tiempo de Construcci\u00f3n","text":"<pre><code>ARG VERSION\nARG BUILD_DATE\nARG VCS_REF\n\nLABEL org.label-schema.version=$VERSION\nLABEL org.label-schema.build-date=$BUILD_DATE\nLABEL org.label-schema.vcs-ref=$VCS_REF\n</code></pre>"},{"location":"devops/docker/docker-comandos/","title":"Gu\u00eda de Referencia de Comandos Docker","text":""},{"location":"devops/docker/docker-comandos/#vision-general","title":"Visi\u00f3n General","text":"<p>Esta gu\u00eda completa cubre los comandos de Docker desde el uso b\u00e1sico hasta el avanzado, incluyendo gesti\u00f3n de contenedores, redes, vol\u00famenes y operaciones de Docker Swarm.</p>"},{"location":"devops/docker/docker-comandos/#comandos-basicos","title":"Comandos B\u00e1sicos","text":""},{"location":"devops/docker/docker-comandos/#informacion-del-sistema","title":"Informaci\u00f3n del Sistema","text":"<pre><code># Verificar la versi\u00f3n de Docker\ndocker --version\n\n# Mostrar informaci\u00f3n detallada del sistema\ndocker info\n\n# Mostrar la versi\u00f3n del cliente y servidor Docker\ndocker version\n\n# Obtener ayuda sobre los comandos de Docker\ndocker help\n</code></pre>"},{"location":"devops/docker/docker-comandos/#gestion-de-imagenes","title":"Gesti\u00f3n de Im\u00e1genes","text":""},{"location":"devops/docker/docker-comandos/#operaciones-basicas-con-imagenes","title":"Operaciones B\u00e1sicas con Im\u00e1genes","text":"<pre><code># Construir una imagen\ndocker build -t &lt;nombre_imagen&gt; &lt;ruta_dockerfile&gt;\n\n# Descargar una imagen del registro\ndocker pull &lt;nombre_imagen&gt;\n\n# Subir una imagen al registro\ndocker push &lt;nombre_imagen&gt;\n\n# Listar im\u00e1genes locales\ndocker images\n\n# Eliminar una imagen\ndocker rmi &lt;nombre_imagen&gt;\n\n# Etiquetar una imagen\ndocker tag &lt;nombre_imagen&gt; &lt;repositorio&gt;/&lt;nombre_imagen&gt;\n</code></pre>"},{"location":"devops/docker/docker-comandos/#operaciones-avanzadas-con-imagenes","title":"Operaciones Avanzadas con Im\u00e1genes","text":"<pre><code># Construir sin usar cach\u00e9\ndocker build --no-cache -t &lt;nombre_imagen&gt; &lt;ruta_dockerfile&gt;\n\n# Construir con argumentos de construcci\u00f3n\ndocker build --build-arg &lt;nombre_variable&gt;=&lt;valor&gt; -t &lt;nombre_imagen&gt; &lt;ruta_dockerfile&gt;\n\n# Ver historial de una imagen\ndocker history &lt;nombre_imagen&gt;\n\n# Exportar sistema de archivos de un contenedor\ndocker export &lt;nombre_contenedor&gt; &gt; &lt;archivo.tar&gt;\n\n# Importar sistema de archivos\ndocker import &lt;archivo.tar&gt;\n\n# Guardar imagen en archivo tar\ndocker save -o &lt;archivo.tar&gt; &lt;nombre_imagen&gt;\n\n# Cargar imagen desde archivo tar\ndocker load -i &lt;archivo.tar&gt;\n</code></pre>"},{"location":"devops/docker/docker-comandos/#gestion-de-contenedores","title":"Gesti\u00f3n de Contenedores","text":""},{"location":"devops/docker/docker-comandos/#operaciones-basicas-con-contenedores","title":"Operaciones B\u00e1sicas con Contenedores","text":"<pre><code># Ejecutar un contenedor\ndocker run [opciones] &lt;nombre_imagen&gt;\n\nOpciones comunes:\n-d                    # Modo desconectado (segundo plano)\n-p &lt;host&gt;:&lt;cont&gt;      # Mapeo de puertos\n--name &lt;nombre&gt;       # Asignar nombre al contenedor\n-v &lt;host&gt;:&lt;cont&gt;      # Montar volumen\n--network &lt;red&gt;       # Conectar a una red\n-e VARIABLE=valor     # Establecer variable de entorno\n</code></pre>"},{"location":"devops/docker/docker-comandos/#administracion-de-contenedores","title":"Administraci\u00f3n de Contenedores","text":"<pre><code># Listar contenedores en ejecuci\u00f3n\ndocker ps\n\n# Listar todos los contenedores\ndocker ps -a\n\n# Detener un contenedor\ndocker stop &lt;nombre_contenedor&gt;\n\n# Iniciar un contenedor\ndocker start &lt;nombre_contenedor&gt;\n\n# Reiniciar un contenedor\ndocker restart &lt;nombre_contenedor&gt;\n\n# Eliminar un contenedor\ndocker rm &lt;nombre_contenedor&gt;\n\n# Ejecutar comando en un contenedor\ndocker exec -it &lt;nombre_contenedor&gt; &lt;comando&gt;\n\n# Ver logs del contenedor\ndocker logs &lt;nombre_contenedor&gt;\n</code></pre>"},{"location":"devops/docker/docker-comandos/#redes","title":"Redes","text":""},{"location":"devops/docker/docker-comandos/#gestion-de-redes-docker","title":"Gesti\u00f3n de Redes Docker","text":"<pre><code># Listar redes\ndocker network ls\n\n# Crear una red\ndocker network create &lt;nombre_red&gt;\n\n# Inspeccionar una red\ndocker network inspect &lt;nombre_red&gt;\n\n# Conectar contenedor a una red\ndocker network connect &lt;nombre_red&gt; &lt;nombre_contenedor&gt;\n\n# Desconectar contenedor de una red\ndocker network disconnect &lt;nombre_red&gt; &lt;nombre_contenedor&gt;\n</code></pre>"},{"location":"devops/docker/docker-comandos/#volumenes","title":"Vol\u00famenes","text":""},{"location":"devops/docker/docker-comandos/#gestion-de-volumenes","title":"Gesti\u00f3n de Vol\u00famenes","text":"<pre><code># Listar vol\u00famenes\ndocker volume ls\n\n# Crear volumen\ndocker volume create &lt;nombre_volumen&gt;\n\n# Inspeccionar volumen\ndocker volume inspect &lt;nombre_volumen&gt;\n\n# Eliminar volumen\ndocker volume rm &lt;nombre_volumen&gt;\n</code></pre>"},{"location":"devops/docker/docker-comandos/#docker-compose","title":"Docker Compose","text":""},{"location":"devops/docker/docker-comandos/#operaciones-con-docker-compose","title":"Operaciones con Docker Compose","text":"<pre><code># Iniciar servicios\ndocker-compose up\n\n# Iniciar servicios en segundo plano\ndocker-compose up -d\n\n# Detener y eliminar servicios\ndocker-compose down\n\n# Construir servicios\ndocker-compose build\n\n# Ver logs de servicios\ndocker-compose logs\n\n# Ejecutar comando en un servicio\ndocker-compose exec &lt;servicio&gt; &lt;comando&gt;\n</code></pre>"},{"location":"devops/docker/docker-comandos/#administracion-del-sistema","title":"Administraci\u00f3n del Sistema","text":""},{"location":"devops/docker/docker-comandos/#mantenimiento-y-monitoreo","title":"Mantenimiento y Monitoreo","text":"<pre><code># Ver uso de disco\ndocker system df\n\n# Limpiar recursos no utilizados\ndocker system prune\n\n# Monitorear recursos en tiempo real\ndocker stats\n\n# Inspeccionar contenedor o imagen\ndocker inspect &lt;nombre&gt;\n\n# Ver eventos del sistema Docker\ndocker events\n</code></pre>"},{"location":"devops/docker/docker-comandos/#docker-swarm","title":"Docker Swarm","text":""},{"location":"devops/docker/docker-comandos/#gestion-de-cluster","title":"Gesti\u00f3n de Cl\u00faster","text":"<pre><code># Inicializar swarm\ndocker swarm init\n\n# Unirse a un swarm\ndocker swarm join --token &lt;token&gt; &lt;ip_manager&gt;:&lt;puerto&gt;\n\n# Crear un servicio\ndocker service create --name &lt;nombre_servicio&gt; &lt;imagen&gt;\n\n# Escalar un servicio\ndocker service scale &lt;nombre_servicio&gt;=&lt;n\u00famero_instancias&gt;\n\n# Desplegar stack\ndocker stack deploy -c &lt;archivo_compose&gt; &lt;nombre_stack&gt;\n\n# Eliminar stack\ndocker stack rm &lt;nombre_stack&gt;\n</code></pre>"},{"location":"devops/docker/docker-comandos/#comandos-avanzados","title":"Comandos Avanzados","text":""},{"location":"devops/docker/docker-comandos/#operaciones-especializadas","title":"Operaciones Especializadas","text":"<pre><code># Copiar archivos al contenedor\ndocker cp &lt;ruta_local&gt; &lt;nombre_contenedor&gt;:&lt;ruta_destino&gt;\n\n# Copiar archivos desde el contenedor\ndocker cp &lt;nombre_contenedor&gt;:&lt;ruta_origen&gt; &lt;ruta_local&gt;\n\n# Pausar contenedor\ndocker pause &lt;nombre_contenedor&gt;\n\n# Reanudar contenedor\ndocker unpause &lt;nombre_contenedor&gt;\n\n# Esperar a que termine un contenedor\ndocker wait &lt;nombre_contenedor&gt;\n</code></pre>"},{"location":"devops/docker/docker-compose/","title":"Estructura Detallada de Docker Compose","text":""},{"location":"devops/docker/docker-compose/#esquema-general","title":"Esquema General","text":"<p>Un archivo <code>docker-compose.yml</code> tiene la siguiente estructura jer\u00e1rquica:</p> <pre><code>version: \"3.9\"                    # Versi\u00f3n del formato de Docker Compose\n\nservices:                         # Definici\u00f3n de servicios/contenedores\n  servicio1:                     # Primer servicio\n    # configuraci\u00f3n del servicio\n  servicio2:                     # Segundo servicio\n    # configuraci\u00f3n del servicio\n\nnetworks:                        # Definici\u00f3n de redes\n  red1:                         # Primera red\n    # configuraci\u00f3n de la red\n  red2:                         # Segunda red\n    # configuraci\u00f3n de la red\n\nvolumes:                         # Definici\u00f3n de vol\u00famenes\n  volumen1:                     # Primer volumen\n    # configuraci\u00f3n del volumen\n  volumen2:                     # Segundo volumen\n    # configuraci\u00f3n del volumen\n\nconfigs:                         # Definici\u00f3n de configuraciones (modo Swarm)\n  config1:                      # Primera configuraci\u00f3n\n    # configuraci\u00f3n\n\nsecrets:                         # Definici\u00f3n de secretos (modo Swarm)\n  secreto1:                     # Primer secreto\n    # configuraci\u00f3n\n</code></pre>"},{"location":"devops/docker/docker-compose/#estructura-detallada-de-servicios","title":"Estructura Detallada de Servicios","text":"<pre><code>services:\n  servicio1:\n    # Especificaci\u00f3n de imagen\n    image: nginx:latest                      # Imagen a utilizar\n    build:                                   # O construir desde Dockerfile\n      context: ./dir                         # Contexto de construcci\u00f3n\n      dockerfile: Dockerfile.dev             # Archivo Dockerfile\n      args:                                  # Argumentos de construcci\u00f3n\n        buildno: 1\n        gitcommit: abc123\n\n    # Configuraci\u00f3n de contenedor\n    container_name: mi-servicio              # Nombre del contenedor\n    hostname: servicio1                      # Hostname dentro del contenedor\n    domainname: ejemplo.com                  # Nombre de dominio\n\n    # Networking\n    ports:                                   # Mapeo de puertos\n      - \"80:80\"                             # host:contenedor\n      - \"443:443\"\n    expose:                                  # Puertos expuestos sin publicar\n      - \"8080\"\n    networks:                                # Redes a las que se conecta\n      - red1\n      - red2\n\n    # Almacenamiento\n    volumes:                                 # Vol\u00famenes y bind mounts\n      - /var/lib/mysql                       # Volumen an\u00f3nimo\n      - db-data:/var/lib/mysql              # Volumen nombrado\n      - ./config:/etc/nginx/conf.d:ro       # Bind mount (solo lectura)\n\n    # Variables de entorno\n    environment:                             # Variables directas\n      - RACK_ENV=development\n      - SHOW=true\n    env_file:                               # Archivo de variables\n      - ./web-variables.env\n\n    # Dependencias\n    depends_on:                             # Dependencias de servicios\n      - db\n      - redis\n\n    # Pol\u00edticas de reinicio y actualizaci\u00f3n\n    restart: always                         # Pol\u00edtica de reinicio\n    deploy:                                 # Configuraci\u00f3n de despliegue\n      replicas: 3                          # N\u00famero de r\u00e9plicas\n      update_config:                       # Configuraci\u00f3n de actualizaciones\n        parallelism: 2\n        delay: 10s\n      resources:                           # L\u00edmites de recursos\n        limits:\n          cpus: '0.50'\n          memory: 512M\n        reservations:\n          cpus: '0.25'\n          memory: 256M\n\n    # Configuraci\u00f3n de salud\n    healthcheck:                           # Verificaci\u00f3n de salud\n      test: [\"CMD\", \"curl\", \"-f\", \"http://localhost\"]\n      interval: 30s\n      timeout: 10s\n      retries: 3\n      start_period: 40s\n\n    # Configuraci\u00f3n de usuario\n    user: postgres                         # Usuario para ejecutar el contenedor\n    working_dir: /app                      # Directorio de trabajo\n\n    # Comandos\n    entrypoint: /code/entrypoint.sh       # Punto de entrada\n    command: [\"php\", \"-d\", \"memory_limit=-1\", \"artisan\", \"serve\"]  # Comando\n\n    # DNS\n    dns:                                   # Servidores DNS\n      - 8.8.8.8\n      - 8.8.4.4\n    dns_search:                           # Dominios de b\u00fasqueda DNS\n      - dc1.example.com\n      - dc2.example.com\n\n    # Configuraci\u00f3n adicional\n    cap_add:                              # Agregar capacidades Linux\n      - ALL\n    cap_drop:                             # Quitar capacidades Linux\n      - NET_ADMIN\n      - SYS_ADMIN\n\n    # Logging\n    logging:                              # Configuraci\u00f3n de logs\n      driver: \"json-file\"\n      options:\n        max-size: \"200k\"\n        max-file: \"10\"\n</code></pre>"},{"location":"devops/docker/docker-compose/#estructura-detallada-de-redes","title":"Estructura Detallada de Redes","text":"<pre><code>networks:\n  red1:\n    driver: bridge                        # Driver de red (bridge, overlay, etc.)\n    driver_opts:                          # Opciones del driver\n      com.docker.network.bridge.name: mi-red\n    ipam:                                # Configuraci\u00f3n IP\n      driver: default\n      config:\n        - subnet: 172.28.0.0/16\n          ip_range: 172.28.5.0/24\n          gateway: 172.28.5.254\n    internal: true                       # Red interna sin acceso a Internet\n    attachable: true                     # Permite adjuntar contenedores manualmente\n    enable_ipv6: true                    # Habilita IPv6\n    labels:                              # Etiquetas\n      com.ejemplo.descripcion: \"Red frontend\"\n</code></pre>"},{"location":"devops/docker/docker-compose/#estructura-detallada-de-volumenes","title":"Estructura Detallada de Vol\u00famenes","text":"<pre><code>volumes:\n  volumen1:\n    driver: local                        # Driver de volumen\n    driver_opts:                         # Opciones del driver\n      type: nfs\n      o: addr=10.40.0.199,rw\n      device: \":/docker/ejemplo\"\n    external: false                      # Si el volumen es externo\n    labels:                             # Etiquetas\n      com.ejemplo.descripcion: \"Datos de la base de datos\"\n</code></pre>"},{"location":"devops/docker/docker-compose/#estructura-detallada-de-configs","title":"Estructura Detallada de Configs","text":"<pre><code>configs:\n  config1:\n    file: ./configs/app.conf            # Archivo de configuraci\u00f3n\n    external: false                     # Si la configuraci\u00f3n es externa\n    template:                          # Plantilla de configuraci\u00f3n\n      source: ./template.conf\n      target: /etc/nginx/nginx.conf\n</code></pre>"},{"location":"devops/docker/docker-compose/#estructura-detallada-de-secrets","title":"Estructura Detallada de Secrets","text":"<pre><code>secrets:\n  secreto1:\n    file: ./secrets/api_key.txt        # Archivo de secreto\n    external: true                     # Si el secreto es externo\n    name: production_api_key           # Nombre externo del secreto\n</code></pre>"},{"location":"devops/docker/docker-compose/#ejemplo-completo-integrado","title":"Ejemplo Completo Integrado","text":"<pre><code>version: \"3.9\"\n\nservices:\n  web:\n    image: nginx:latest\n    container_name: web-server\n    ports:\n      - \"80:80\"\n    networks:\n      - frontend\n    volumes:\n      - web-content:/usr/share/nginx/html\n    environment:\n      - NGINX_HOST=ejemplo.com\n    depends_on:\n      - api\n    healthcheck:\n      test: [\"CMD\", \"curl\", \"-f\", \"http://localhost\"]\n      interval: 30s\n    deploy:\n      replicas: 2\n      resources:\n        limits:\n          cpus: '0.5'\n          memory: 512M\n\n  api:\n    build:\n      context: ./api\n      dockerfile: Dockerfile\n    networks:\n      - frontend\n      - backend\n    environment:\n      - DB_HOST=db\n    depends_on:\n      - db\n    secrets:\n      - db_password\n\n  db:\n    image: postgres:13\n    volumes:\n      - db-data:/var/lib/postgresql/data\n    networks:\n      - backend\n    environment:\n      - POSTGRES_DB=miapp\n      - POSTGRES_PASSWORD_FILE=/run/secrets/db_password\n    configs:\n      - source: db_config\n        target: /etc/postgresql/postgresql.conf\n\nnetworks:\n  frontend:\n    driver: bridge\n  backend:\n    driver: bridge\n    internal: true\n\nvolumes:\n  web-content:\n  db-data:\n    driver: local\n\nconfigs:\n  db_config:\n    file: ./configs/postgresql.conf\n\nsecrets:\n  db_password:\n    file: ./secrets/db_password.txt\n</code></pre>"},{"location":"devops/docker/docker/","title":"Introducci\u00f3n a Docker","text":"<p>Docker es una plataforma de software que permite crear, distribuir y ejecutar aplicaciones en contenedores. Los contenedores son entornos ligeros, aislados y port\u00e1tiles que permiten ejecutar aplicaciones de forma consistente, sin importar el sistema operativo o la infraestructura en la que se ejecuten. Esto facilita enormemente el desarrollo, la distribuci\u00f3n y la ejecuci\u00f3n de software, mejorando la eficiencia, la portabilidad y la escalabilidad de las aplicaciones.</p>"},{"location":"devops/docker/docker/#conceptos-clave-de-docker","title":"Conceptos clave de Docker","text":""},{"location":"devops/docker/docker/#contenedores","title":"Contenedores","text":"<p>Son unidades de ejecuci\u00f3n ligeras e independientes que contienen todo lo necesario para ejecutar una aplicaci\u00f3n (c\u00f3digo, bibliotecas, dependencias, configuraciones, etc.). A diferencia de las m\u00e1quinas virtuales, los contenedores no requieren un sistema operativo completo, lo que los hace m\u00e1s eficientes en cuanto a recursos.</p>"},{"location":"devops/docker/docker/#docker-engine","title":"Docker Engine","text":"<p>Es el motor que ejecuta los contenedores. Est\u00e1 compuesto por dos componentes principales:</p> <ul> <li>Docker Daemon (dockerd): Un proceso que corre en segundo plano, gestionando los contenedores, im\u00e1genes, redes y vol\u00famenes.</li> <li>Docker CLI (Interfaz de L\u00ednea de Comandos): La herramienta de l\u00ednea de comandos utilizada para interactuar con Docker, enviando comandos al daemon para crear, ejecutar y gestionar contenedores e im\u00e1genes.</li> </ul>"},{"location":"devops/docker/docker/#imagenes","title":"Im\u00e1genes","text":"<p>Son plantillas de solo lectura que contienen el sistema de archivos necesario para ejecutar un contenedor. Las im\u00e1genes pueden ser creadas a partir de archivos de configuraci\u00f3n llamados <code>Dockerfile</code>, y pueden ser almacenadas en repositorios p\u00fablicos o privados.</p>"},{"location":"devops/docker/docker/#dockerfile","title":"Dockerfile","text":"<p>Es un archivo de texto que contiene instrucciones para construir una imagen de Docker. Define el sistema operativo base, las dependencias necesarias, los archivos a copiar y los comandos a ejecutar dentro del contenedor.</p>"},{"location":"devops/docker/docker/#docker-hub","title":"Docker Hub","text":"<p>Es un repositorio p\u00fablico donde se pueden almacenar y compartir im\u00e1genes de Docker. Docker Hub contiene miles de im\u00e1genes preconstruidas para facilitar el uso de tecnolog\u00edas populares, como bases de datos, servidores web, lenguajes de programaci\u00f3n, etc.</p>"},{"location":"devops/docker/docker/#redes-y-volumenes","title":"Redes y Vol\u00famenes","text":"<p>Docker permite definir redes virtuales para que los contenedores se comuniquen entre s\u00ed. Los vol\u00famenes son usados para almacenar datos persistentes que sobreviven a la vida \u00fatil de los contenedores.</p>"},{"location":"devops/docker/docker/#ventajas-de-usar-docker","title":"Ventajas de usar Docker","text":""},{"location":"devops/docker/docker/#portabilidad","title":"Portabilidad","text":"<p>Docker permite que las aplicaciones se ejecuten en cualquier entorno sin que se produzcan inconsistencias debidas a diferencias entre sistemas operativos o configuraciones de software.</p>"},{"location":"devops/docker/docker/#aislamiento","title":"Aislamiento","text":"<p>Los contenedores proporcionan un entorno aislado, lo que significa que los problemas de una aplicaci\u00f3n no afectan a otras aplicaciones que se ejecutan en el mismo sistema.</p>"},{"location":"devops/docker/docker/#escalabilidad-y-eficiencia","title":"Escalabilidad y eficiencia","text":"<p>Los contenedores son ligeros y pueden ser f\u00e1cilmente escalados. Son mucho m\u00e1s eficientes que las m\u00e1quinas virtuales porque comparten el mismo sistema operativo base, lo que ahorra recursos.</p>"},{"location":"devops/docker/docker/#desarrollo-mas-rapido","title":"Desarrollo m\u00e1s r\u00e1pido","text":"<p>Los desarrolladores pueden crear, probar y distribuir aplicaciones de manera m\u00e1s r\u00e1pida y fiable, asegurando que funcionen de la misma manera en todos los entornos (desarrollo, pruebas, producci\u00f3n).</p>"},{"location":"devops/docker/docker/#integracion-con-cicd","title":"Integraci\u00f3n con CI/CD","text":"<p>Docker se integra f\u00e1cilmente con herramientas de integraci\u00f3n continua (CI) y entrega continua (CD), facilitando la automatizaci\u00f3n del ciclo de vida del software y la entrega de nuevas versiones de manera continua.</p>"},{"location":"hardware/","title":"Fundamentos de hardware","text":"<p>En esta secci\u00f3n, se presentan los siguientes temas:</p> <ul> <li>Arquitectura de sistemas</li> <li>Entornos operativos</li> <li>Aplicaciones de prop\u00f3sito general</li> </ul>"},{"location":"hardware/aplicaciones_generales/","title":"Introducci\u00f3n, Clasificaci\u00f3n y Licencias de Software","text":""},{"location":"hardware/aplicaciones_generales/#aplicaciones-de-proposito-general","title":"Aplicaciones de Prop\u00f3sito General","text":"<p>Los ordenadores son herramientas configurables por definici\u00f3n. Podemos cambiar tanto el hardware como el sistema operativo, y estos sistemas operativos suelen incluir una gran cantidad de herramientas, tanto de administraci\u00f3n como de prop\u00f3sito general.</p>"},{"location":"hardware/aplicaciones_generales/#clasificacion-de-software","title":"Clasificaci\u00f3n de Software","text":"<p>El software se puede clasificar en dos tipos b\u00e1sicos seg\u00fan su finalidad y utilidad:</p> <ol> <li> <p>Aplicaciones Horizontales: Son aplicaciones de prop\u00f3sito general que pueden ser utilizadas en todo tipo de organizaciones o por usuarios individuales. Ejemplos incluyen herramientas ofim\u00e1ticas, procesadores de texto y software de contabilidad.</p> </li> <li> <p>Aplicaciones Verticales: Son aplicaciones dise\u00f1adas para tareas muy espec\u00edficas, como la gesti\u00f3n de pacientes en un consultorio dental o la reserva de billetes de avi\u00f3n. Estas aplicaciones no son \u00fatiles fuera del \u00e1mbito para el que fueron dise\u00f1adas.</p> </li> </ol>"},{"location":"hardware/aplicaciones_generales/#software-de-oficina-y-productividad","title":"Software de Oficina y Productividad","text":"<p>El software de productividad facilita tareas como la creaci\u00f3n y edici\u00f3n de documentos, c\u00e1lculos, gesti\u00f3n de archivos y organizaci\u00f3n del tiempo. Algunos ejemplos incluyen:</p> <ul> <li>Paquetes Ofim\u00e1ticos: Microsoft Office, OpenOffice, LibreOffice.</li> <li>Procesadores de Texto: Microsoft Word, AbiWord, LaTeX.</li> <li>Hojas de C\u00e1lculo: Microsoft Excel, LibreOffice Calc, Gnumeric.</li> <li>Gestores de Proyectos: Microsoft Project, OpenProject.</li> </ul>"},{"location":"hardware/aplicaciones_generales/#imagen-diseno-y-multimedia","title":"Imagen, Dise\u00f1o y Multimedia","text":"<p>Los ordenadores modernos son herramientas poderosas para la edici\u00f3n de contenido multimedia. Algunas aplicaciones comunes incluyen:</p> <ul> <li>Edici\u00f3n de Im\u00e1genes: Adobe Photoshop, GIMP.</li> <li>Edici\u00f3n de V\u00eddeo: Adobe Premiere, KDenlive.</li> <li>Reproductores Multimedia: VLC Media Player, Windows Media Player.</li> <li>Modelado 3D: Blender, Maya.</li> </ul>"},{"location":"hardware/aplicaciones_generales/#clientes-para-servicios-de-internet","title":"Clientes para Servicios de Internet","text":"<p>Con la popularizaci\u00f3n de Internet, han surgido aplicaciones que permiten acceder a servicios en l\u00ednea. Algunas de estas herramientas incluyen:</p> <ul> <li>Navegadores Web: Google Chrome, Mozilla Firefox.</li> <li>Clientes de Correo: Microsoft Outlook, Thunderbird.</li> <li>Mensajer\u00eda Instant\u00e1nea: WhatsApp, Telegram.</li> <li>Clientes FTP: FileZilla, WinSCP.</li> </ul>"},{"location":"hardware/aplicaciones_generales/#otras-aplicaciones","title":"Otras Aplicaciones","text":"<p>Existen aplicaciones para casi cualquier necesidad, incluyendo:</p> <ul> <li>Software Educativo: Programas para aprender mecanograf\u00eda, matem\u00e1ticas, astronom\u00eda, etc.</li> <li>Juegos y Entretenimiento: Juegos como Tetris, Civilization, y simuladores de vuelo.</li> <li>Entornos de Desarrollo Integrado (IDE): Herramientas para programar, como Visual Studio, Eclipse, y NetBeans.</li> <li>Software de Servidor: Servidores web (Apache), servidores FTP, y sistemas de gesti\u00f3n de bases de datos (MySQL, PostgreSQL).</li> </ul>"},{"location":"hardware/aplicaciones_generales/#herramientas-de-virtualizacion","title":"Herramientas de Virtualizaci\u00f3n","text":"<p>La virtualizaci\u00f3n permite ejecutar sistemas operativos y aplicaciones en un entorno virtual, sin necesidad de instalarlos directamente en el hardware. Algunas herramientas populares incluyen:</p> <ul> <li>VirtualBox: Software de virtualizaci\u00f3n multiplataforma.</li> <li>VMware Workstation: Herramienta de virtualizaci\u00f3n comercial.</li> <li>QEmu: Software de virtualizaci\u00f3n de c\u00f3digo abierto.</li> <li>Microsoft Virtual PC: Virtualizaci\u00f3n para sistemas Windows.</li> </ul>"},{"location":"hardware/aplicaciones_generales/#instalacion-de-software-de-aplicacion","title":"Instalaci\u00f3n de Software de Aplicaci\u00f3n","text":""},{"location":"hardware/aplicaciones_generales/#instalacion-en-windows","title":"Instalaci\u00f3n en Windows","text":"<p>En Windows, la mayor\u00eda de las aplicaciones se instalan mediante instaladores autom\u00e1ticos. Los pasos t\u00edpicos incluyen:</p> <ol> <li>Verificar los requisitos del sistema.</li> <li>Ejecutar el instalador (setup.exe o install.msi).</li> <li>Seguir las instrucciones del asistente de instalaci\u00f3n.</li> <li>Reiniciar el equipo si es necesario.</li> </ol>"},{"location":"hardware/aplicaciones_generales/#instalacion-en-gnulinux","title":"Instalaci\u00f3n en GNU/Linux","text":"<p>En Linux, la instalaci\u00f3n de software se realiza principalmente a trav\u00e9s de gestores de paquetes como <code>apt</code> (para distribuciones basadas en Debian) o <code>yum</code> (para distribuciones basadas en Red Hat). Los pasos b\u00e1sicos son:</p> <ol> <li>Actualizar los repositorios: <code>sudo apt-get update</code>.</li> <li>Instalar el paquete: <code>sudo apt-get install nombre_del_paquete</code>.</li> <li>Para software compilado desde el c\u00f3digo fuente, se siguen los pasos:</li> <li>Descomprimir el c\u00f3digo fuente.</li> <li>Ejecutar <code>./configure</code>, <code>make</code>, y <code>make install</code>.</li> </ol>"},{"location":"hardware/aplicaciones_generales/#aplicaciones-portables","title":"Aplicaciones Portables","text":"<p>Las aplicaciones portables no requieren instalaci\u00f3n y pueden ejecutarse desde dispositivos extra\u00edbles como USB. Ejemplos incluyen:</p> <ul> <li>Windows: PortableApps.</li> <li>Linux: RUNZ.</li> </ul>"},{"location":"hardware/aplicaciones_generales/#realizacion-de-inventarios","title":"Realizaci\u00f3n de Inventarios","text":"<p>Mantener un inventario actualizado del software instalado en un equipo es esencial para optimizar recursos. En Windows, se puede usar la herramienta \"Programas y caracter\u00edsticas\", mientras que en Linux se pueden usar comandos como <code>dpkg</code> o herramientas gr\u00e1ficas como el Centro de Software de Ubuntu.</p>"},{"location":"hardware/aplicaciones_generales/#licencias-de-software","title":"Licencias de Software","text":""},{"location":"hardware/aplicaciones_generales/#software-comercial-o-propietario","title":"Software Comercial o Propietario","text":"<p>El software comercial est\u00e1 sujeto a una licencia que restringe su uso, modificaci\u00f3n y redistribuci\u00f3n. Algunos ejemplos incluyen:</p> <ul> <li>Microsoft Windows: Sistema operativo propietario.</li> <li>Adobe Photoshop: Software de edici\u00f3n de im\u00e1genes.</li> <li>Microsoft Office: Suite ofim\u00e1tica.</li> </ul>"},{"location":"hardware/aplicaciones_generales/#software-libre-o-de-codigo-abierto","title":"Software Libre o de C\u00f3digo Abierto","text":"<p>El software libre permite a los usuarios usar, modificar y distribuir el software libremente. Algunos ejemplos incluyen:</p> <ul> <li>GNU/Linux: Sistema operativo de c\u00f3digo abierto.</li> <li>OpenOffice: Suite ofim\u00e1tica libre.</li> <li>GIMP: Editor de im\u00e1genes de c\u00f3digo abierto.</li> </ul>"},{"location":"hardware/aplicaciones_generales/#pirateria-digital","title":"Pirater\u00eda Digital","text":"<p>La pirater\u00eda digital se refiere a la distribuci\u00f3n ilegal de software y contenido multimedia. Aunque en algunos pa\u00edses se permite la copia privada, la distribuci\u00f3n no autorizada de software protegido por derechos de autor es ilegal.</p>"},{"location":"hardware/aplicaciones_generales/#tablas-resumen","title":"Tablas Resumen","text":""},{"location":"hardware/aplicaciones_generales/#tabla-aplicaciones-de-oficina-y-productividad","title":"Tabla: Aplicaciones de Oficina y Productividad","text":"Windows Linux Descripci\u00f3n Microsoft Office OpenOffice Suite ofim\u00e1tica Microsoft Word LibreOffice Writer Procesador de textos Microsoft Excel LibreOffice Calc Hoja de c\u00e1lculo"},{"location":"hardware/aplicaciones_generales/#tabla-herramientas-de-creacion-de-contenido","title":"Tabla: Herramientas de Creaci\u00f3n de Contenido","text":"Windows Linux Descripci\u00f3n Adobe Photoshop GIMP Edici\u00f3n de im\u00e1genes Adobe Premiere KDenlive Edici\u00f3n de v\u00eddeo"},{"location":"hardware/aplicaciones_generales/#tabla-herramientas-de-virtualizacion","title":"Tabla: Herramientas de Virtualizaci\u00f3n","text":"Windows Linux Descripci\u00f3n VirtualBox VirtualBox Virtualizaci\u00f3n VMware Workstation QEmu Virtualizaci\u00f3n"},{"location":"hardware/arquitectura/","title":"Arquitectura de sistemas","text":""},{"location":"hardware/entornos_operativos/","title":"Entornos operativos. Utilidades","text":"<p>El entorno operativo es la denominaci\u00f3n que engloba el sistema operativo, su interfaz de usuario asociada y una serie de aplicaciones y utilidades.</p> <p>El entorno operativo incluye:</p> <ol> <li>Sistemas operativos</li> <li>Sistemas gestores de bases de datos (SGDB)</li> <li>Sistemas de comunicaciones</li> <li>Entornos de desarrollo</li> </ol> <p>El software se puede clasificar en dos tipos:</p> <ul> <li>El software base o de sistema o sistema operativo, que controla los recursos de la m\u00e1quina.</li> <li>El software de aplicaci\u00f3n o de utilidad, ayuda a realizar todo tipo de tareas a los usuarios.</li> </ul>"},{"location":"hardware/entornos_operativos/#eleccion-del-sistema-operativo-adecuado","title":"Elecci\u00f3n del Sistema Operativo Adecuado","text":"<p>Elegir el sistema operativo adecuado a las funciones que espera de su equipo inform\u00e1tico es una decisi\u00f3n importante y depende de muchos factores, no solo t\u00e9cnicos, sino tambi\u00e9n organizativos y econ\u00f3micos, entre otros.  </p> <p>En caso de que el sistema sea de pago, tendr\u00e1 que valorar el coste de las licencias. Tambi\u00e9n debe considerar:  </p> <ul> <li>Si trabajar\u00e1 en red o no.  </li> <li>Si el ordenador desempe\u00f1ar\u00e1 la funci\u00f3n de servidor.  </li> <li>El tipo de software espec\u00edfico para el sistema operativo.  </li> </ul> <p>Por lo tanto, deber\u00e1 buscar la mayor informaci\u00f3n posible sobre este software. Puede obtener informaci\u00f3n de diversas fuentes, como:  </p> <ul> <li>Internet.  </li> <li>Libros dedicados a esta tem\u00e1tica.  </li> <li>Revistas de inform\u00e1tica actualizadas.  </li> </ul> <p>Para elegir un sistema adecuado a un determinado tipo de tareas, es necesario conocer en profundidad:  </p> <ul> <li>Los componentes que lo conforman.  </li> <li>Las funciones a las que est\u00e1n destinados.  </li> <li>El software de utilidad disponible para un determinado tipo de sistema operativo.  </li> </ul>"},{"location":"hardware/entornos_operativos/#funciones-principales-de-un-sistema-operativo","title":"Funciones Principales de un Sistema Operativo","text":"<p>Los programas de sistema o sistemas operativos son los encargados de permitir al usuario el acceso a la m\u00e1quina de una manera transparente y sencilla.  </p> <p>Las funciones principales de un sistema operativo se pueden resumir en los siguientes puntos:  </p> <ul> <li>Interpretar las instrucciones que permiten al usuario comunicarse con el ordenador.  </li> <li>Coordinar y manipular el hardware del PC, como la memoria, los procesadores y el sistema de entrada/salida.  </li> <li>Gestionar los posibles errores de hardware y la p\u00e9rdida de datos.  </li> <li>Organizar los archivos en diversos dispositivos de almacenamiento, como discos flexibles y discos duros.  </li> <li>Servir de base para la creaci\u00f3n de software, garantizando la compatibilidad con distintos tipos de equipos.  </li> <li>Configurar el entorno para la utilizaci\u00f3n del software y los perif\u00e9ricos.  </li> </ul>"},{"location":"hardware/entornos_operativos/#familias-de-sistemas-operativos","title":"Familias de sistemas operativos","text":"<ul> <li> <p>MS-DOS: Fue un sistema operativo que Microsoft adapt\u00f3 para IBM, en concreto, para el modelo PC. Lo desarroll\u00f3 Tim Paterson, que trabajaba para Seattle Computer Products, y Microsoft Corporation lo adquiri\u00f3. Se trata de un sistema monousuario y monotarea, cosa que limita mucho la funcionalidad y las posibilidades del software instalado. Actualmente ha quedado obsoleto y solo lo encontramos como simuladores para ejecutar aplicaciones antiguas, como juegos cl\u00e1sicos.</p> </li> <li> <p>OS/2: OS/2 fue desarrollado inicialmente por IBM y Microsoft tras la aparici\u00f3n del primer procesador 80286. Cuando esta colaboraci\u00f3n se rompi\u00f3, IBM continu\u00f3 con su desarrollo con el objetivo de sustituir a MS-DOS. Su interfaz era muy similar a la de MS-DOS, pero se diferenciaba por contar con un repertorio de instrucciones m\u00e1s extenso y por ser un sistema operativo multitarea. A pesar de las mejoras que aportaba a los sistemas de la \u00e9poca, OS/2 no tuvo el \u00e9xito esperado.</p> </li> <li> <p>Windows: El primer sistema operativo de Microsoft, Windows, apareci\u00f3 en 1985. Este sistema trajo consigo una interfaz gr\u00e1fica m\u00e1s f\u00e1cil de utilizar en comparaci\u00f3n con otros sistemas operativos de la \u00e9poca.</p> <p>Algunas de las primeras versiones importantes fueron Windows 3.0, Windows 3.1 y Windows 3.11, que introdujeron innovaciones clave como:</p> <ul> <li>Soporte de red.</li> <li>La capacidad de reiniciar el sistema operativo.</li> <li>Soporte multimedia.</li> <li>Con Windows 3.11, la capacidad de comunicarse en red.</li> </ul> <p>M\u00e1s tarde, lleg\u00f3 la versi\u00f3n Windows 98, que a\u00f1adi\u00f3 el soporte para el sistema de archivos FAT32, mejorando la gesti\u00f3n de discos y el rendimiento general.</p> </li> <li> <p>Unix: Fue desarrollado en los laboratorios AT&amp;T Bell en 1969 y originalmente estaba dise\u00f1ado para funcionar en miniordenadores. Al principio, se difundi\u00f3 principalmente en el \u00e1mbito universitario, ya que estaba m\u00e1s enfocado en la aplicaci\u00f3n en el campo de la investigaci\u00f3n.</p> <p>Unix es un sistema multiusuario que incorpora multitarea, lo que le permite soportar un gran n\u00famero de conexiones simult\u00e1neas. Entre sus principales ventajas, destaca el hecho de ser un sistema estable y seguro.</p> </li> <li> <p>GNU/Linux: Es un sistema operativo de c\u00f3digo libre con muchas similitudes con el funcionamiento de UNIX. El proyecto fue iniciado por Richard Stallman con el objetivo de crear un sistema operativo completamente libre. Una parte peque\u00f1a, pero muy importante del sistema, era el n\u00facleo, y Stallman tambi\u00e9n estaba trabajando en \u00e9l.</p> <p>Sin embargo, en 1991, Linus Torvalds escribi\u00f3 dentro de su proyecto universitario un n\u00facleo de sistema operativo muy eficiente, al que llam\u00f3 Linux. Este n\u00facleo lo puso a disposici\u00f3n de la comunidad para que fuera desarrollado por grupos de programadores. Posteriormente, el n\u00facleo Linux se incorpor\u00f3 al proyecto GNU, por lo que el sistema es conocido como GNU/Linux, aunque a menudo se simplifica (quiz\u00e1s en exceso) a Linux.</p> <p>Al principio, GNU/Linux se presentaba en modo texto y con una interfaz poco intuitiva, similar a DOS. Sin embargo, en los \u00faltimos a\u00f1os, se han desarrollado entornos gr\u00e1ficos similares a los de Windows, como KDE y GNOME.</p> <p>El c\u00f3digo fuente, los gestores de dispositivos y sus utilidades est\u00e1n disponibles de forma gratuita para todos, lo que ha permitido la creaci\u00f3n de m\u00faltiples versiones adaptadas a diversas situaciones o preferencias de los usuarios. Estas versiones suelen llamarse distribuciones GNU/Linux, y cada una tiene sus caracter\u00edsticas particulares: algunas buscan ser las m\u00e1s actualizadas, otras las m\u00e1s estables, algunas son las m\u00e1s f\u00e1ciles de usar, y otras se enfocan en brindar un mejor soporte para el usuario o la empresa.</p> </li> <li> <p>Mac OS: Se trata del sistema operativo que podemos encontrar instalado actualmente en los ordenadores Apple Macintosh, y que utiliza un n\u00facleo Unix como base del sistema.</p> </li> </ul>"},{"location":"hardware/entornos_operativos/#requisistos-de-hardware","title":"Requisistos de hardware","text":"<p>Cada sistema operativo presenta una serie de requisitos a la hora de instalarlo en un ordenador. Estos requisitos tienen que ver con lo siguiente:</p> <ul> <li>El tipo de microprocesador</li> <li>La memoria RAM</li> <li>El tama\u00f1o del disco duro</li> </ul>"},{"location":"hardware/entornos_operativos/#actualizacion-de-sistemas-operativos","title":"Actualizaci\u00f3n de sistemas operativos","text":"<p>Seguridad del sistema operativo: Dado que el sistema operativo es el software b\u00e1sico encargado del funcionamiento del ordenador, los problemas de seguridad con los que se pueda encontrar, como virus o otros programas malignos, son fundamentales para el uso del sistema y la seguridad de los datos. El hecho de trabajar cada vez m\u00e1s con Internet tambi\u00e9n agrava la vulnerabilidad del sistema.</p> <p>A lo largo del ciclo de vida de un sistema operativo, se van descubriendo vulnerabilidades importantes que no hab\u00edan sido previstas inicialmente. Los propios fabricantes de software ponen a disposici\u00f3n de los usuarios actualizaciones para compensar estas deficiencias.</p> <p>En cuanto a los tipos de actualizaciones, existen diferentes niveles. Por ejemplo, el sistema Windows XP puede utilizar varios tipos de actualizaciones:</p> <ul> <li>Alta prioridad: Actualizaciones cr\u00edticas, de seguridad, service packs y paquetes acumulativos de revisiones.</li> <li>Software (opcional): Revisi\u00f3n de aplicaciones no cr\u00edticas, como Windows Media y el visor de Windows Journal.</li> <li>Hardware (opcional): Actualizaciones para controladores y otros dispositivos de hardware, como tarjetas de sonido, impresoras, etc.</li> </ul>"},{"location":"hardware/entornos_operativos/#software-de-utilidad-y-actualizaciones","title":"Software de Utilidad y Actualizaciones","text":""},{"location":"hardware/entornos_operativos/#requisitos-de-hardware","title":"Requisitos de Hardware","text":"<ul> <li>Elementos clave:</li> <li>Tipo de microprocesador.</li> <li>Memoria RAM.</li> <li>Tama\u00f1o del disco duro.</li> <li>Evoluci\u00f3n de los sistemas operativos (aumento de requisitos por mejoras gr\u00e1ficas).</li> <li>Recomendaci\u00f3n: Utilizar recursos superiores a los m\u00ednimos requeridos para garantizar rendimiento.</li> </ul>"},{"location":"hardware/entornos_operativos/#actualizacion-de-sistemas-operativos_1","title":"Actualizaci\u00f3n de Sistemas Operativos","text":""},{"location":"hardware/entornos_operativos/#windows-update","title":"Windows Update","text":"<ul> <li>Tipos de actualizaciones:</li> <li>Alta prioridad: Actualizaciones cr\u00edticas, de seguridad, service packs.</li> <li>Software (opcional): Revisiones para aplicaciones como Windows Media.</li> <li>Hardware (opcional): Controladores y dispositivos (tarjetas de sonido, impresoras).</li> <li>Configuraci\u00f3n autom\u00e1tica:</li> <li>Opciones: Autom\u00e1tica (recomendada), descarga autom\u00e1tica, notificaci\u00f3n.</li> <li>Service Packs destacados:<ul> <li>Windows XP: SP1 (2002), SP2 (2004), SP3 (2008).</li> <li>Windows Vista: SP1 (2008), SP2 (2009).</li> <li>Windows 7: SP1 (2011).</li> </ul> </li> </ul>"},{"location":"hardware/entornos_operativos/#ubuntu-linux-gestor-de-actualizaciones","title":"Ubuntu Linux (Gestor de Actualizaciones)","text":"<ul> <li>Herramientas:</li> <li>Interfaz gr\u00e1fica: <code>Gestor de Actualizaciones</code>.</li> <li>Terminal: <code>sudo apt-get update</code> y <code>sudo apt-get upgrade</code>.</li> <li>Actualizaci\u00f3n de versi\u00f3n: <code>sudo do-release-upgrade -d</code>.</li> <li>Distribuciones alternativas:</li> <li>Red Hat: <code>yum</code>.</li> <li>Fedora: <code>preupgrade</code>.</li> </ul>"},{"location":"hardware/entornos_operativos/#proceso-de-arranque","title":"Proceso de Arranque","text":"<ul> <li>BIOS: Verifica hardware y transfiere control al cargador de arranque.</li> <li>MBR (Master Boot Record): Contiene tabla de particiones y c\u00f3digo de arranque (IPL).</li> <li>Gestores de arranque:</li> <li>Windows: <code>NTLDR</code> (boot.ini) para versiones antiguas; <code>Windows Boot Manager</code> (BCD) para Vista/7.</li> <li>Linux: GRUB (instalado en el MBR o partici\u00f3n).</li> <li>Consejo: Instalar primero Windows y luego Linux para evitar conflictos.</li> </ul>"},{"location":"hardware/entornos_operativos/#utilidades-de-sistema","title":"Utilidades de Sistema","text":""},{"location":"hardware/entornos_operativos/#herramientas-de-seguridad","title":"Herramientas de Seguridad","text":"<ul> <li>Antivirus:</li> <li>Windows: McAfee, Norton, Windows Defender.</li> <li>Linux: ClamAV, AVG.</li> <li>Firewalls:</li> <li>Windows: ZoneAlarm, Sygate.</li> <li>Linux: GUFW, Netfilter/iptables.</li> <li>Software esp\u00eda:</li> <li>Tipos: Keylogger, Dialer, Adware, Tracking Cookies.</li> <li>Herramientas antiesp\u00eda: Spybot, Ad-aware.</li> </ul>"},{"location":"hardware/entornos_operativos/#copias-de-seguridad","title":"Copias de Seguridad","text":"<ul> <li>Tipos:</li> <li>Total: Copia completa (requiere m\u00e1s espacio).</li> <li>Diferencial: Cambios desde la \u00faltima copia total.</li> <li>Incremental: Cambios desde la \u00faltima copia incremental.</li> <li>Herramientas:</li> <li>Windows: Norton Ghost, Cobian Backup.</li> <li>Linux: <code>dd</code>, Mondo Rescue.</li> </ul>"},{"location":"hardware/entornos_operativos/#monitorizacion-y-optimizacion","title":"Monitorizaci\u00f3n y Optimizaci\u00f3n","text":"<ul> <li>Benchmarking:</li> <li>Herramientas: Phoronix Test Suite (Linux), Everest Home (Windows).</li> <li>Tipos: Sint\u00e9ticos (rendimiento m\u00e1ximo) vs. aplicaciones (programas reales).</li> <li>Diagn\u00f3stico:</li> <li>Linux: <code>Hardinfo</code>, <code>lspci</code>, <code>lsusb</code>.</li> <li>Windows: SISoft Sandra.</li> </ul>"},{"location":"hardware/entornos_operativos/#gestion-de-discos-y-particiones","title":"Gesti\u00f3n de Discos y Particiones","text":"<ul> <li>Sistemas de archivos:</li> <li>FAT32 (Windows 98/ME), NTFS (Windows NT+), EXT3/4 (Linux), HFS+ (Mac).</li> <li>Particiones:</li> <li>Primarias (hasta 4) vs. l\u00f3gicas (dentro de una partici\u00f3n extendida).</li> <li>Herramientas: GParted (Linux), Partition Magic (Windows).</li> </ul>"},{"location":"hardware/entornos_operativos/#gestion-de-archivos-y-recuperacion","title":"Gesti\u00f3n de Archivos y Recuperaci\u00f3n","text":"<ul> <li>Gestores de archivos:</li> <li>Windows: Explorador.</li> <li>Linux: Nautilus, Midnight Commander.</li> <li>Mac: Finder.</li> <li>Recuperaci\u00f3n:</li> <li>Papelera de reciclaje (Windows/Linux/Mac).</li> <li>Herramientas: <code>undelete</code> (MS-DOS), Recuva (Windows).</li> <li>Compresores:</li> <li>Formatos: ZIP, RAR, 7z.</li> <li>Herramientas: 7-Zip (Windows), Ark (Linux).</li> </ul>"},{"location":"hardware/entornos_operativos/#tablas-resumen","title":"Tablas Resumen","text":""},{"location":"hardware/entornos_operativos/#tabla-antivirus","title":"Tabla: Antivirus","text":"Windows Linux Windows Defender ClamAV McAfee AVG Antivirus"},{"location":"hardware/entornos_operativos/#tabla-firewalls","title":"Tabla: Firewalls","text":"Windows Linux ZoneAlarm GUFW Sygate Netfilter/iptables"},{"location":"hardware/entornos_operativos/#tabla-copias-de-seguridad","title":"Tabla: Copias de Seguridad","text":"Windows Linux Funci\u00f3n Norton Ghost dd Clonaci\u00f3n Cobian Backup Mondo Rescue Copia total"},{"location":"php/","title":"Introducci\u00f3n a PHP","text":"<p>Bienvenido a la secci\u00f3n de PHP, en esta secci\u00f3n te encontrar\u00e1s con todo lo esecial que necesitas saber sobre PHP.</p>"},{"location":"php/#variables","title":"Variables","text":"<p>Una variable en PHP es un contenedor que almacena un valor o una referencia a un valor en memoria. PHP es un lenguaje de tipado d\u00e9bil, lo que significa que las variables no necesitan declarar un tipo espec\u00edfico antes de usarlas, y el tipo se determina din\u00e1micamente en funci\u00f3n del valor asignado.</p> <pre><code>&lt;?php\n$nombre = \"VoidSec\";\n?&gt;\n</code></pre> <p>Adem\u00e1s, en PHP las variables pueden almacenar referencias a otros valores. Es decir, en lugar de almacenar directamente un valor, pueden apuntar a la direcci\u00f3n de memoria de otro dato, como ocurre con los arrays y objetos.</p>"},{"location":"php/#tipos-de-datos","title":"Tipos de datos","text":"<p>PHP tiene varios tipos de datos, que se pueden clasificar principalmente en tipos escalares y tipos compuestos. Seguidamente los explicamos:</p>"},{"location":"php/#tipos-escalares","title":"Tipos escalares","text":"<p>Los tipos escalares son aquellos que representan un solo valor. En otras palabras, un tipo escalar almacena un valor at\u00f3mico, es decir, no est\u00e1 compuesto por otros valores, sino que es una unidad indivisible.</p> <ol> <li> <p>Enteros (<code>int</code>, <code>integer</code>): Un entero es un n\u00famero sin decimales, ya sea positivo o negativo. <pre><code>&lt;?php\n$numero = 10;\n$numero = -5;\n?&gt;\n</code></pre></p> <ul> <li>Los valores enteros en PHP pueden ser n\u00fameros tanto positivos como negativos.</li> <li>No pueden contener decimales.</li> </ul> </li> <li> <p>Flotantes (<code>float</code>, <code>double</code>): Un flotante (o double) es un n\u00famero que tiene decimales. Los n\u00fameros con decimales son llamados flotantes porque su punto decimal puede \"flotar\" en cualquier parte del n\u00famero. <pre><code>&lt;?php\n$numero = 10.5;\n$numero = -5.25;\n?&gt;\n</code></pre></p> <ul> <li>Los flotantes son \u00fatiles para representar valores m\u00e1s precisos, como precios, temperaturas, etc.</li> <li>Pueden ser positivos o negativos y tienen decimales.</li> </ul> </li> <li> <p>Cadenas de texto (<code>string</code>): Una cadena (string) es un conjunto de caracteres, como palabras, frases o incluso n\u00fameros representados como texto. Las cadenas son muy utilizadas para trabajar con texto. <pre><code>&lt;?php\n$texto = \"Esto es una cadena de texto\";\n$texto_2 = \"Esto es otra cadena de texto\";\n?&gt;\n</code></pre></p> <ul> <li>Las cadenas pueden estar entre comillas dobles (\"texto\") o simples ('texto'), y pueden contener letras, n\u00fameros y caracteres especiales.</li> <li>Se usan mucho para representar nombres, direcciones, mensajes, etc.</li> </ul> </li> <li> <p>Booleanos (<code>bool</code>): Un booleano representa un valor de verdadero o falso (<code>true</code> o <code>false</code>). Se utiliza en condiciones o en estructuras de control de flujo, como <code>if</code>, para tomar decisiones. <pre><code>&lt;?php\n$esVerdadero = true;\n$esFalso = false;\n?&gt;\n</code></pre></p> <ul> <li>Los booleanos son muy \u00fatiles para la l\u00f3gica de programaci\u00f3n, especialmente en comparaciones o validaciones.</li> </ul> </li> </ol>"},{"location":"php/#tipos-compuestos","title":"Tipos compuestos","text":"<p>Los tipos compuestos son aquellos que pueden almacenar m\u00faltiples valores. A diferencia de los tipos escalares que solo almacenan un \u00fanico valor, los tipos compuestos agrupan varios valores, y esos valores pueden ser de diferentes tipos. En PHP, los tipos compuestos m\u00e1s comunes son arrays y objetos.</p> <ol> <li> <p>Arrays (<code>array</code>): Un array es una estructura de datos que puede almacenar varios valores, los cuales pueden ser de diferentes tipos. Los arrays pueden ser indexados (donde cada valor tiene un \u00edndice num\u00e9rico) o asociativos (donde cada valor est\u00e1 asociado a una clave personalizada).</p> <ul> <li>Array indexado: Los arrays indexados utilizan \u00edndices num\u00e9ricos (por defecto empiezan desde 0). <pre><code>&lt;?php\n$colores = [\"rojo\", \"verde\", \"azul\"];  // Un array indexado\necho $colores[0];  // Salida: rojo\n?&gt;\n</code></pre></li> <li>Array asociativo (<code>array</code>):  Los arrays asociativos permiten asociar valores a claves personalizadas. <pre><code>&lt;?php\n$persona = [\n    \"nombre\" =&gt; \"Juan\",\n    \"edad\" =&gt; 30,\n    \"ciudad\" =&gt; \"Madrid\"\n];  // Un array asociativo\necho $persona[\"nombre\"];  // Salida: Juan\n?&gt;\n</code></pre></li> <li>Objetos (<code>object</code>): Un objeto es una instancia de una clase. Las clases son plantillas o moldes que definen las propiedades y m\u00e9todos de los objetos. Los objetos se usan en la Programaci\u00f3n Orientada a Objetos (OOP) para agrupar datos y funcionalidades relacionadas. <pre><code>&lt;?php\nclass Persona {\n    public $nombre;\n    public $edad;\n\n    public function __construct($nombre, $edad) {\n        $this-&gt;nombre = $nombre;\n        $this-&gt;edad = $edad;\n    }\n\n    public function saludar() {\n        return \"Hola, mi nombre es \" . $this-&gt;nombre;\n    }\n}\n\n$persona1 = new Persona(\"Juan\", 30);  // Crear un objeto\necho $persona1-&gt;saludar();  // Salida: Hola, mi nombre es Juan\n?&gt;\n</code></pre></li> </ul> </li> </ol> <p>Un ejemplo ser\u00eda:</p> <pre><code>&lt;?php\n$a = 10;\n$b = &amp;$a;  // $b es una referencia a $a\n$b = 20;    // Cambia tanto $b como $a\necho $a;    // Salida: 20\n?&gt;\n</code></pre>"},{"location":"php/#tipos-de-variables-y-referencias","title":"Tipos de variables y referencias","text":"<p>PHP permite dos tipos de paso de datos: por valor y por referencia. En el paso por valor, se crea una copia del dato y se trabaja sobre ella. En el paso por referencia, las variables apuntan al mismo bloque de memoria, por lo que cualquier cambio realizado afectar\u00e1 al dato original.</p>"},{"location":"php/#operadores","title":"Operadores","text":"<p>Los operadores aritm\u00e9ticos permiten realizar operaciones matem\u00e1ticas en PHP. Adem\u00e1s de los operadores aritm\u00e9ticos, existen otros tipos de operadores, como los operadores de comparaci\u00f3n y los operadores l\u00f3gicos, que permiten realizar comparaciones y operar con valores booleanos, respectivamente.</p>"},{"location":"php/#operadores-aritmeticos","title":"Operadores aritm\u00e9ticos","text":"<pre><code>&lt;?php\n$a = 5;\n$b = 3;\necho $a + $b;  // Suma\necho $a - $b;  // Resta\necho $a * $b;  // Multiplicaci\u00f3n\necho $a / $b;  // Divisi\u00f3n\necho $a % $b;  // M\u00f3dulo (resto de la divisi\u00f3n)\necho $a ** $b; // Potencia (a elevado a la b)\n?&gt;\n</code></pre> <ul> <li> <p><code>+</code> : Suma</p> </li> <li> <p><code>-</code> : Resta</p> </li> <li> <p><code>*</code> : Multiplicaci\u00f3n</p> </li> <li> <p><code>/</code> : Divisi\u00f3n</p> </li> <li> <p><code>%</code> : M\u00f3dulo (resto de la divisi\u00f3n)</p> </li> <li> <p><code>**</code> : Potencia (a elevado a la b)</p> </li> </ul>"},{"location":"php/#operadores-de-comparacion","title":"Operadores de comparaci\u00f3n","text":"<pre><code>&lt;?php\n$a = 5;\n$b = 10;\necho $a == $b;  // Compara si son iguales\necho $a != $b;  // Compara si no son iguales\necho $a &lt; $b;   // Compara si $a es menor que $b\necho $a &gt; $b;   // Compara si $a es mayor que $b\necho $a &lt;= $b;  // Compara si $a es menor o igual que $b\necho $a &gt;= $b;  // Compara si $a es mayor o igual que $b\n?&gt;\n</code></pre> <ul> <li><code>==</code> : Compara si son iguales</li> <li><code>!=</code> : Compara si no son iguales</li> <li><code>&lt;</code> : Compara si $a es menor que $b</li> <li><code>&gt;</code> : Compara si $a es mayor que $b</li> <li><code>&lt;=</code> : Compara si $a es menor o igual que $b</li> <li><code>&gt;=</code> : Compara si $a es mayor o igual que $b</li> </ul>"},{"location":"php/#operadores-logicos","title":"Operadores L\u00f3gicos","text":"<pre><code>&lt;?php\n$a = true;\n$b = false;\necho $a &amp;&amp; $b;  // Y l\u00f3gico (ambas condiciones deben ser verdaderas)\necho $a || $b;  // O l\u00f3gico (al menos una condici\u00f3n debe ser verdadera)\necho !$a;       // Negaci\u00f3n l\u00f3gica (invierte el valor de la condici\u00f3n)\n?&gt;\n</code></pre> <ul> <li><code>&amp;&amp;</code> : Y l\u00f3gico (ambas condiciones deben ser verdaderas) (AND)</li> <li><code>||</code> : O l\u00f3gico (al menos una condici\u00f3n debe ser verdadera) (OR)</li> <li><code>!</code> : Negaci\u00f3n l\u00f3gica (invierte el valor de la condici\u00f3n) (NOT)</li> </ul>"},{"location":"php/#operadores-de-asignacion","title":"Operadores de asignaci\u00f3n","text":"<pre><code>&lt;?php\n$a = 5;\n$a += 3;  // Equivalente a $a = $a + 3;\n$a -= 2;  // Equivalente a $a = $a - 2;\n$a *= 4;  // Equivalente a $a = $a * 4;\n$a /= 2;  // Equivalente a $a = $a / 2;\n$a %= 3;  // Equivalente a $a = $a % 3;\n?&gt;\n</code></pre> <ul> <li><code>=</code>: Asignaci\u00f3n</li> <li><code>+=</code>: Suma y asignaci\u00f3n</li> <li><code>-=</code>: Resta y asignaci\u00f3n</li> <li><code>*=</code>: Multiplicaci\u00f3n y asignaci\u00f3n</li> <li><code>/=</code>: Divisi\u00f3n y asignaci\u00f3n</li> <li><code>%=</code>: M\u00f3dulo y asignaci\u00f3n</li> </ul>"},{"location":"php/#operadores-de-incremento-y-decremento","title":"Operadores de incremento y decremento","text":"<pre><code>&lt;?php\n$a = 5;\necho ++$a;  // Pre-incremento: incrementa antes de usar el valor\necho $a++;  // Post-incremento: usa el valor y luego lo incrementa\necho --$a;  // Pre-decremento: decrementa antes de usar el valor\necho $a--;  // Post-decremento: usa el valor y luego lo decrementa\n?&gt;\n</code></pre> <ul> <li><code>++$a</code>: Pre-incremento: incrementa antes de usar el valor</li> <li><code>$a++</code>: Post-incremento: usa el valor y luego lo incrementa</li> <li><code>--$a</code>: Pre-decremento: decrementa antes de usar el valor</li> <li><code>$a--</code>: Post-decremento: usa el valor y luego lo decrementa</li> </ul>"},{"location":"php/#operadores-de-cadena","title":"Operadores de Cadena","text":"<pre><code>&lt;?php\n$a = \"Hola\";\n$b = \"Mundo\";\necho $a . \" \" . $b;  // Concatena las cadenas\n?&gt;\n</code></pre> <ul> <li><code>.</code>: Concatena las cadenas</li> </ul>"},{"location":"php/#operadores-de-identidad","title":"Operadores de Identidad","text":"<pre><code>&lt;?php\n$a = 5;\n$b = \"5\";\necho $a === $b;  // Compara si $a y $b son id\u00e9nticos (mismo valor y tipo)\necho $a !== $b;  // Compara si $a y $b no son id\u00e9nticos (valor o tipo diferente)\n?&gt;\n</code></pre> <ul> <li><code>===</code>: Compara si $a y $b son id\u00e9nticos (mismo valor y tipo)</li> <li><code>!==</code>: Compara si $a y $b no son id\u00e9nticos (valor o tipo diferente)</li> </ul>"},{"location":"php/#operadores-de-tipo","title":"Operadores de tipo","text":"<pre><code>&lt;?php\n// Definici\u00f3n de variables con diferentes tipos de datos\n$a = 42;                 // Entero\n$b = \"Hello, World!\";    // Cadena\n$c = true;               // Booleano\n$d = [1, 2, 3];          // Array\n$e = new DateTime();     // Objeto\n$f = null;               // Nulo\n$g = 3.14159;            // Flotante\n$h = \"123\";              // Cadena num\u00e9rica\n\n// Verificaci\u00f3n de tipos con is_*() y demostraci\u00f3n de los resultados\necho \"\u00bf\\$a es un entero? \" . (is_int($a) ? 'S\u00ed' : 'No') . \"\\n\";               // Verifica si $a es un entero\necho \"\u00bf\\$b es una cadena? \" . (is_string($b) ? 'S\u00ed' : 'No') . \"\\n\";           // Verifica si $b es una cadena\necho \"\u00bf\\$c es un booleano? \" . (is_bool($c) ? 'S\u00ed' : 'No') . \"\\n\";             // Verifica si $c es un booleano\necho \"\u00bf\\$d es un array? \" . (is_array($d) ? 'S\u00ed' : 'No') . \"\\n\";               // Verifica si $d es un array\necho \"\u00bf\\$e es un objeto? \" . (is_object($e) ? 'S\u00ed' : 'No') . \"\\n\";             // Verifica si $e es un objeto\necho \"\u00bf\\$f es nulo? \" . (is_null($f) ? 'S\u00ed' : 'No') . \"\\n\";                   // Verifica si $f es nulo\necho \"\u00bf\\$g es num\u00e9rico? \" . (is_numeric($g) ? 'S\u00ed' : 'No') . \"\\n\";             // Verifica si $g es un n\u00famero\necho \"\u00bf\\$h es un flotante? \" . (is_float($h) ? 'S\u00ed' : 'No') . \"\\n\";            // Verifica si $h es un flotante\n\n// Verificaci\u00f3n de cadenas num\u00e9ricas y su conversi\u00f3n\necho \"\u00bf\\$h es num\u00e9rico (como cadena)? \" . (is_numeric($h) ? 'S\u00ed' : 'No') . \"\\n\"; // Verifica si $h es num\u00e9rico\n\n// Convertir cadena num\u00e9rica a entero y verificar el tipo\n$h_int = (int)$h;   // Convierte $h de cadena a entero\necho \"Valor de \\$h como entero: $h_int\\n\";\necho \"\u00bf\\$h_int es un entero? \" . (is_int($h_int) ? 'S\u00ed' : 'No') . \"\\n\";  // Verifica si la conversi\u00f3n fue exitosa\n?&gt;\n</code></pre> <ul> <li><code>is_int($a)</code>: Verifica si $a es un entero</li> <li><code>is_string($b)</code>: Verifica si $b es una cadena</li> <li><code>is_bool($c)</code>: Verifica si $c es un booleano</li> <li><code>is_array($d)</code>: Verifica si $d es un array</li> <li><code>is_object($e)</code>: Verifica si $e es un objeto</li> <li><code>is_null($f)</code>: Verifica si $f es un valor nulo</li> <li><code>is_numeric($g)</code>: Verifica si $g es un n\u00famero</li> <li><code>is_float($h)</code>: Verifica si $h es un flotante</li> </ul>"},{"location":"php/#condicionales","title":"Condicionales","text":"<p>Las condiciones en PHP se utilizan para ejecutar bloques de c\u00f3digo en funci\u00f3n de si una expresi\u00f3n es verdadera o falsa. Son fundamentales para controlar el flujo de ejecuci\u00f3n de un programa. Las estructuras de control m\u00e1s comunes en PHP son <code>if</code>, <code>else</code>, <code>elseif</code>, y <code>switch</code>.</p>"},{"location":"php/#condicionales-if","title":"Condicionales <code>if</code>","text":"<pre><code>&lt;?php\nif (expresi\u00f3n) {\n    // C\u00f3digo que se ejecuta si la expresi\u00f3n es verdadera\n}\n?&gt;\n</code></pre> <p>Pongamos un ejemplo: <pre><code>&lt;?php\n$edad = 18;\n\nif ($edad &gt;= 18) {\n    echo \"Eres mayor de edad.\";\n}\n?&gt;\n</code></pre></p> <p>Este ejemplo verifica si la variable <code>$edad</code> es mayor o igual a 18. Si es as\u00ed, se imprime el mensaje \"Eres mayor de edad.\".</p>"},{"location":"php/#condicionales-if-else","title":"Condicionales <code>if-else</code>","text":"<pre><code>&lt;?php\nif (expresi\u00f3n) {\n    // C\u00f3digo que se ejecuta si la expresi\u00f3n es verdadera\n} else {\n    // C\u00f3digo que se ejecuta si la expresi\u00f3n es falsa\n}\n?&gt;\n</code></pre> <p>Pongamos un ejemplo: <pre><code>&lt;?php\n$a = 2;\nif ($a &gt; 3) {\n    echo \"El valor de a es mayor que 3\";\n} else {\n    echo \"El valor de a no es mayor que 3\";\n}\n?&gt;\n</code></pre></p> <p>Aqu\u00ed, como <code>$a</code> es 2, la condici\u00f3n no se cumple, por lo que se imprimir\u00e1 \"El valor de a no es mayor que 3\".</p>"},{"location":"php/#condicionales-if-elseif-else","title":"Condicionales <code>if-elseif-else</code>","text":"<pre><code>&lt;?php\nif (expresi\u00f3n1) {\n    // C\u00f3digo si expresi\u00f3n1 es verdadera\n} elseif (expresi\u00f3n2) {\n    // C\u00f3digo si expresi\u00f3n2 es verdadera\n} else {\n    // C\u00f3digo si ninguna expresi\u00f3n es verdadera\n}\n?&gt;\n</code></pre> <p>Pongamos un ejemplo: <pre><code>&lt;?php\n$a = 10;\nif ($a &gt; 20) {\n    echo \"El valor de a es mayor que 20\";\n} elseif ($a == 10) {\n    echo \"El valor de a es igual a 10\";\n} else {\n    echo \"El valor de a es menor que 10\";\n}\n?&gt;\n</code></pre> En este caso, la salida ser\u00e1 \"El valor de a es igual a 10\", ya que la condici\u00f3n <code>elseif ($a == 10)</code> es verdadera.</p>"},{"location":"php/#condicionales-switch","title":"Condicionales <code>switch</code>","text":"<pre><code>&lt;?php\nswitch (expresi\u00f3n) {\n    case valor1:\n        // C\u00f3digo si la expresi\u00f3n es igual a valor1\n        break;\n    case valor2:\n        // C\u00f3digo si la expresi\u00f3n es igual a valor2\n        break;\n    default:\n        // C\u00f3digo si ninguno de los valores coincide\n}\n?&gt;\n</code></pre> <p>Pongamos un ejemplo: <pre><code>&lt;?php\n$dia = 2;\n\nswitch ($dia) {\n    case 1:\n        echo \"Hoy es lunes\";\n        break;\n    case 2:\n        echo \"Hoy es martes\";\n        break;\n    case 3:\n        echo \"Hoy es mi\u00e9rcoles\";\n        break;\n    default:\n        echo \"D\u00eda desconocido\";\n}\n?&gt;\n</code></pre> En este ejemplo, como <code>$dia</code> es 2, la salida ser\u00e1 \"Hoy es martes\". El <code>break</code> se utiliza para salir del bloque switch una vez que se ha encontrado el caso correspondiente.</p>"},{"location":"php/#condicionales-ternarias","title":"Condicionales ternarias","text":"<pre><code>&lt;?php\n(expresi\u00f3n) ? valor_si_verdadero : valor_si_falso;\n?&gt;\n</code></pre> <p>Pongamos un ejemplo: <pre><code>&lt;?php\n$a = 5;\necho ($a &gt; 3) ? \"Mayor que 3\" : \"No mayor que 3\";\n?&gt;\n</code></pre></p> <p>Este ejemplo imprimir\u00e1 \"Mayor que 3\" porque la condici\u00f3n <code>a &gt; 3</code> es verdadera.</p>"},{"location":"php/#condicionales-con-operadores-logicos","title":"Condicionales con operadores l\u00f3gicos","text":"<pre><code>&lt;?php\n$a = 5;\n$b = 10;\nif ($a &gt; 3 &amp;&amp; $b &gt; 5) {\n    echo \"Ambas condiciones son verdaderas\";\n}\n?&gt;\n</code></pre> <p>Aqu\u00ed, ambas condiciones deben ser verdaderas para que se ejecute el bloque de c\u00f3digo, por lo que se imprimir\u00e1 \"Ambas condiciones son verdaderas\".</p>"},{"location":"php/#bucles","title":"Bucles","text":"<p>Los bucles nos permiten ejecutar un bloque de c\u00f3digo repetidamente mientras se cumpla una condici\u00f3n. En PHP, los bucles m\u00e1s comunes son <code>for</code>, <code>while</code>, <code>do-while</code> y <code>foreach</code>.</p>"},{"location":"php/#bucles-for","title":"Bucles <code>for</code>","text":"<pre><code>&lt;?php\nfor (inicializaci\u00f3n; condici\u00f3n; incremento) {\n    // C\u00f3digo que se ejecuta en cada iteraci\u00f3n\n}\n?&gt;\n</code></pre> <p>Pongamos un ejemplo: <pre><code>&lt;?php\nfor ($i = 1; $i &lt;= 5; $i++) {\n    echo \"El valor de i es $i\\n\";\n}\n?&gt;\n</code></pre></p> <p>Este ejemplo imprimir\u00e1 los siguientes valores de <code>$i</code>: <pre><code>El valor de i es 1\nEl valor de i es 2\nEl valor de i es 3\nEl valor de i es 4\nEl valor de i es 5\n</code></pre></p>"},{"location":"php/#bucles-while","title":"Bucles <code>while</code>","text":"<pre><code>&lt;?php\nwhile (condici\u00f3n) {\n    // C\u00f3digo que se ejecuta mientras la condici\u00f3n sea verdadera\n}\n?&gt;\n</code></pre> <p>Pongamos un ejemplo: <pre><code>&lt;?php\n$i = 0;\nwhile ($i &lt; 5) {\n    echo \"El valor de i es: $i&lt;br&gt;\";\n    $i++;\n}\n?&gt;\n</code></pre></p>"},{"location":"php/#bucles-do-while","title":"Bucles <code>do-while</code>","text":"<pre><code>&lt;?php\ndo {\n    // C\u00f3digo que se ejecuta al menos una vez\n} while (condici\u00f3n);\n?&gt;\n</code></pre> <p>Pongamos un ejemplo: <pre><code>&lt;?php\n$i = 0;\ndo {\n    echo \"El valor de i es: $i&lt;br&gt;\";\n    $i++;\n} while ($i &lt; 5);\n?&gt;\n</code></pre></p> <p>Este bucle tambi\u00e9n imprimir\u00e1 los valores de $i desde 0 hasta 4.</p>"},{"location":"php/#bucles-foreach","title":"Bucles <code>foreach</code>","text":"<pre><code>&lt;?php\nforeach ($array as $valor) {\n    // C\u00f3digo que se ejecuta en cada iteraci\u00f3n\n}\n?&gt;\n</code></pre> <p>Si necesitas tanto el \u00edndice como el valor del array:</p> <p><pre><code>&lt;?php\nforeach ($array as $indice =&gt; $valor) {\n    // C\u00f3digo que se ejecuta en cada iteraci\u00f3n\n}\n?&gt;\n</code></pre> Pongamos ejemplo:</p> <p><pre><code>&lt;?php\n$colores = [\"rojo\", \"verde\", \"azul\"];\nforeach ($colores as $color) {\n    echo \"El color es: $color&lt;br&gt;\";\n}\n?&gt;\n</code></pre> Este bucle imprimir\u00e1 los valores \"rojo\", \"verde\" y \"azul\".</p>"},{"location":"php/#funciones","title":"Funciones","text":"<p>Una funci\u00f3n es un bloque de c\u00f3digo que realiza una tarea espec\u00edfica y siempre debe devolver un valor (aunque sea NULL por defecto si no se especifica expl\u00edcitamente un return). Puedes definir tus propias funciones y llamarlas cuando sea necesario.</p>"},{"location":"php/#definicion-de-funciones","title":"Definici\u00f3n de funciones","text":"<pre><code>&lt;?php\nfunction nombreDeLaFuncion() {\n    // C\u00f3digo que realiza la funci\u00f3n\n    return $resultado;  // Debe devolver algo\n}\n?&gt;\n</code></pre> <p>Pongamos un ejemplo: <pre><code>&lt;?php\nfunction saludar() {\n    return \"\u00a1Hola, mundo!\";  // La funci\u00f3n devuelve un valor\n}\n\necho saludar();  // Llamada a la funci\u00f3n y muestra el valor retornado\n?&gt;\n</code></pre></p>"},{"location":"php/#parametros-de-funciones","title":"Par\u00e1metros de funciones","text":"<p>Puedes pasar datos a las funciones utilizando par\u00e1metros. Estos valores son utilizados dentro de la funci\u00f3n y debe devolverse un valor.</p> <pre><code>&lt;?php\nfunction saludar($nombre) {\n    return \"\u00a1Hola, $nombre!\";  // La funci\u00f3n devuelve un valor\n}\n\necho saludar(\"Juan\");  // Llamada con par\u00e1metro\n?&gt;\n</code></pre>"},{"location":"php/#funciones-anonimas","title":"Funciones an\u00f3nimas","text":"<p>PHP tambi\u00e9n permite crear funciones sin nombre, conocidas como funciones an\u00f3nimas. A pesar de ser an\u00f3nimas, siempre deben devolver un valor si as\u00ed lo requiere el contexto.</p> <pre><code>&lt;?php\n$saludar = function($nombre) {\n    return \"\u00a1Hola, $nombre!\";  // Funci\u00f3n an\u00f3nima con retorno\n};\n\necho $saludar(\"Pedro\");  // Llamada a la funci\u00f3n an\u00f3nima\n?&gt;\n</code></pre> <p>Este ejemplo crea una funci\u00f3n an\u00f3nima y la almacena en la variable $saludar.</p>"},{"location":"php/#funciones-recursivas","title":"Funciones recursivas","text":"<p>Una funci\u00f3n recursiva es aquella que se llama a s\u00ed misma. Son \u00fatiles para resolver problemas que pueden dividirse en subproblemas m\u00e1s peque\u00f1os, como el c\u00e1lculo de factoriales o la b\u00fasqueda en estructuras de datos como \u00e1rboles. Y siempre deben retornar un valor.</p> <pre><code>&lt;?php\nfunction factorial($n) {\n    if ($n &lt;= 1) {\n        return 1;  // Caso base, retorna 1\n    } else {\n        return $n * factorial($n - 1);  // Llamada recursiva con retorno\n    }\n}\n\necho factorial(5);  // Imprime 120\n?&gt;\n</code></pre> <p>En este ejemplo, la funci\u00f3n <code>factorial()</code> se llama a s\u00ed misma, pero siempre retorna un valor.</p>"},{"location":"php/#funciones-incorporadas","title":"Funciones incorporadas","text":"<p>PHP tambi\u00e9n tiene muchas funciones incorporadas que puedes utilizar, como strlen() para obtener la longitud de una cadena, array_push() para agregar un elemento a un array, etc. Estas funciones tambi\u00e9n devuelven un valor.</p> <p><pre><code>&lt;?php\n$cadena = \"Hola\";\necho strlen($cadena);  // Devuelve 4, que es la longitud de la cadena\n?&gt;\n</code></pre> https://www.php.net/manual/es/indexes.functions.php</p>"},{"location":"php/#request-superglobals","title":"Request Superglobals","text":""},{"location":"php/#request-superglobals-en-php","title":"Request Superglobals en PHP","text":"<p>En PHP, los request superglobals son variables predefinidas que permiten acceder a la informaci\u00f3n proveniente de diversas fuentes externas, como formularios, cookies, URL y m\u00e1s. Estos son accesibles globalmente en todo el script PHP. A continuaci\u00f3n, un resumen de los m\u00e1s utilizados:</p> <ol> <li><code>$_GET</code>:     Contiene los datos enviados a trav\u00e9s de la URL, generalmente mediante el m\u00e9todo HTTP GET. Los valores se env\u00edan como par\u00e1metros en la cadena de consulta.</li> <li> <p>Ejemplo: <code>$_GET['nombre']</code> obtiene el valor de <code>nombre</code> de la URL.</p> </li> <li> <p><code>$_POST</code>:     Almacena los datos enviados mediante el m\u00e9todo HTTP POST, generalmente en formularios. Es m\u00e1s seguro para enviar grandes cantidades de datos que <code>$_GET</code>, ya que no se muestran en la URL.</p> </li> <li> <p>Ejemplo: <code>$_POST['usuario']</code> obtiene el valor de <code>usuario</code> de un formulario enviado.</p> </li> <li> <p><code>$_REQUEST</code>:     Contiene tanto los datos de <code>$_GET</code>, <code>$_POST</code>, como de <code>$_COOKIE</code>. Es un \"superglobal\" que combina estos tres arrays, pero se recomienda usar <code>$_GET</code> o <code>$_POST</code> espec\u00edficamente, ya que <code>$_REQUEST</code> puede ser menos seguro.</p> </li> <li> <p>Ejemplo: <code>$_REQUEST['email']</code> obtiene el valor del par\u00e1metro <code>email</code> de cualquiera de las tres fuentes.</p> </li> <li> <p><code>$_SERVER</code>:     Almacena informaci\u00f3n sobre los servidores y el entorno de ejecuci\u00f3n, como cabeceras HTTP, informaci\u00f3n del script, m\u00e9todo de petici\u00f3n, etc.</p> </li> <li> <p>Ejemplo: <code>$_SERVER['HTTP_USER_AGENT']</code> obtiene el agente de usuario (el navegador).</p> </li> <li> <p><code>$_FILES</code>:     Contiene los datos de los archivos subidos a trav\u00e9s de un formulario HTML con el m\u00e9todo <code>POST</code>. Se utiliza para acceder a los detalles de los archivos, como el nombre, tama\u00f1o y tipo de archivo.</p> </li> <li> <p>Ejemplo: <code>$_FILES['archivo']['name']</code> obtiene el nombre del archivo subido.</p> </li> <li> <p><code>$_ENV</code>:     Contiene variables de entorno del sistema, como configuraciones de servidor o configuraciones del sistema operativo.</p> </li> <li> <p>Ejemplo: <code>$_ENV['PATH']</code> obtiene el valor de la variable de entorno <code>PATH</code>.</p> </li> <li> <p><code>$_COOKIE</code>:     Almacena los valores de las cookies enviadas por el navegador. Se utiliza para leer los valores de las cookies configuradas previamente.</p> </li> <li> <p>Ejemplo: <code>$_COOKIE['user']</code> obtiene el valor de la cookie <code>user</code>.</p> </li> <li> <p><code>$_SESSION</code>:     Almacena datos sobre una sesi\u00f3n de usuario. Es \u00fatil para mantener la informaci\u00f3n entre diferentes p\u00e1ginas durante una sesi\u00f3n en particular.</p> </li> <li>Ejemplo: <code>$_SESSION['username']</code> obtiene el valor almacenado de <code>username</code> en la sesi\u00f3n.</li> </ol> <p>Cada uno de estos superglobales tiene un prop\u00f3sito espec\u00edfico y permite interactuar con la entrada y el entorno del servidor de manera eficiente. Es importante siempre validar y sanitizar los datos provenientes de estas fuentes para evitar riesgos de seguridad, como inyecciones de SQL o XSS.</p>"},{"location":"php/sql/","title":"Conexi\u00f3n a Bases de Datos en PHP","text":"<p>Conectar PHP a bases de datos es esencial para crear aplicaciones web din\u00e1micas que puedan almacenar y recuperar informaci\u00f3n. En esta gu\u00eda cubriremos los pasos para conectarse a bases de datos y realizar operaciones b\u00e1sicas como insertar, modificar, eliminar y consultar datos, explicando en detalle qu\u00e9 hace cada parte del c\u00f3digo.</p>"},{"location":"php/sql/#1-conectar-a-mysql-usando-mysqli","title":"1. Conectar a MySQL Usando MySQLi","text":"<p>Ejemplo de Conexi\u00f3n: <pre><code>&lt;?php\n$servername = \"localhost\"; // Nombre del servidor de la base de datos\n$username = \"usuario\"; // Nombre de usuario de la base de datos\n$password = \"contrase\u00f1a\"; // Contrase\u00f1a del usuario\n$database = \"nombre_base_datos\"; // Nombre de la base de datos\n\n// Crear conexi\u00f3n\n$conn = new mysqli($servername, $username, $password, $database);\n\n// Comprobar conexi\u00f3n\nif ($conn-&gt;connect_error) {\n    die(\"Error de conexi\u00f3n: \" . $conn-&gt;connect_error); // Termina la ejecuci\u00f3n si la conexi\u00f3n falla\n}\n\necho \"Conexi\u00f3n exitosa\"; // Muestra un mensaje si la conexi\u00f3n es exitosa\n?&gt;\n</code></pre></p>"},{"location":"php/sql/#2-operaciones-basicas","title":"2. Operaciones B\u00e1sicas","text":""},{"location":"php/sql/#insertar-datos","title":"Insertar Datos","text":"<p>Este bucle inserta cinco registros en la tabla <code>usuarios</code>. <pre><code>&lt;?php\nfor ($i = 1; $i &lt;= 5; $i++) {\n    $nombre = \"Usuario $i\"; // Genera un nombre para cada usuario\n    $email = \"usuario$i@example.com\"; // Genera un email para cada usuario\n    $sql = \"INSERT INTO usuarios (nombre, email) VALUES ('$nombre', '$email')\";\n    if ($conn-&gt;query($sql) === TRUE) {\n        echo \"Registro $i insertado con \u00e9xito&lt;br&gt;\";\n    } else {\n        echo \"Error: \" . $sql . \"&lt;br&gt;\" . $conn-&gt;error;\n    }\n}\n?&gt;\n</code></pre></p>"},{"location":"php/sql/#modificar-datos","title":"Modificar Datos","text":"<p>Este bucle actualiza los correos electr\u00f3nicos de los cinco usuarios insertados anteriormente. <pre><code>&lt;?php\nfor ($i = 1; $i &lt;= 5; $i++) {\n    $nuevo_email = \"modificado$i@example.com\"; // Nuevo email para cada usuario\n    $sql = \"UPDATE usuarios SET email='$nuevo_email' WHERE nombre='Usuario $i'\";\n    if ($conn-&gt;query($sql) === TRUE) {\n        echo \"Registro $i actualizado con \u00e9xito&lt;br&gt;\";\n    } else {\n        echo \"Error actualizando el registro $i: \" . $conn-&gt;error;\n    }\n}\n?&gt;\n</code></pre></p>"},{"location":"php/sql/#eliminar-datos","title":"Eliminar Datos","text":"<p>Este bucle elimina los registros de los cinco usuarios. <pre><code>&lt;?php\nfor ($i = 1; $i &lt;= 5; $i++) {\n    $sql = \"DELETE FROM usuarios WHERE nombre='Usuario $i'\";\n    if ($conn-&gt;query($sql) === TRUE) {\n        echo \"Registro $i eliminado con \u00e9xito&lt;br&gt;\";\n    } else {\n        echo \"Error eliminando el registro $i: \" . $conn-&gt;error;\n    }\n}\n?&gt;\n</code></pre></p>"},{"location":"php/sql/#consultar-datos","title":"Consultar Datos","text":"<p>Este c\u00f3digo selecciona y muestra todos los registros de la tabla <code>usuarios</code>. <pre><code>&lt;?php\n$sql = \"SELECT id, nombre, email FROM usuarios\";\n$result = $conn-&gt;query($sql);\n\nif ($result-&gt;num_rows &gt; 0) {\n    while($row = $result-&gt;fetch_assoc()) {\n        echo \"ID: \" . $row[\"id\"] . \" - Nombre: \" . $row[\"nombre\"] . \" - Email: \" . $row[\"email\"] . \"&lt;br&gt;\";\n    }\n} else {\n    echo \"0 resultados\";\n}\n?&gt;\n</code></pre></p>"},{"location":"php/sql/#3-conexion-usando-pdo","title":"3. Conexi\u00f3n usando PDO","text":"<p>Ejemplo de Conexi\u00f3n: <pre><code>&lt;?php\n$dsn = 'mysql:host=localhost;dbname=nombre_base_datos'; // Fuente de datos\n$username = 'usuario'; // Nombre de usuario\n$password = 'contrase\u00f1a'; // Contrase\u00f1a\n\ntry {\n    $pdo = new PDO($dsn, $username, $password);\n    $pdo-&gt;setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION); // Activar excepciones en errores\n    echo \"Conexi\u00f3n exitosa\";\n} catch (PDOException $e) {\n    echo \"Error de conexi\u00f3n: \" . $e-&gt;getMessage();\n}\n?&gt;\n</code></pre></p>"},{"location":"php/sql/#4-operaciones-con-pdo","title":"4. Operaciones con PDO","text":""},{"location":"php/sql/#insertar-datos_1","title":"Insertar Datos","text":"<p>Inserta cinco registros en la tabla <code>usuarios</code>. <pre><code>&lt;?php\nfor ($i = 1; $i &lt;= 5; $i++) {\n    $stmt = $pdo-&gt;prepare(\"INSERT INTO usuarios (nombre, email) VALUES (:nombre, :email)\");\n    $stmt-&gt;execute(['nombre' =&gt; \"Usuario $i\", 'email' =&gt; \"usuario$i@example.com\"]);\n    echo \"Registro $i insertado con \u00e9xito&lt;br&gt;\";\n}\n?&gt;\n</code></pre></p>"},{"location":"php/sql/#modificar-datos_1","title":"Modificar Datos","text":"<p>Actualiza los correos electr\u00f3nicos de los cinco usuarios. <pre><code>&lt;?php\nfor ($i = 1; $i &lt;= 5; $i++) {\n    $stmt = $pdo-&gt;prepare(\"UPDATE usuarios SET email = :email WHERE nombre = :nombre\");\n    $stmt-&gt;execute(['email' =&gt; \"modificado$i@example.com\", 'nombre' =&gt; \"Usuario $i\"]);\n    echo \"Registro $i actualizado con \u00e9xito&lt;br&gt;\";\n}\n?&gt;\n</code></pre></p>"},{"location":"php/sql/#eliminar-datos_1","title":"Eliminar Datos","text":"<p>Elimina los registros de los cinco usuarios. <pre><code>&lt;?php\nfor ($i = 1; $i &lt;= 5; $i++) {\n    $stmt = $pdo-&gt;prepare(\"DELETE FROM usuarios WHERE nombre = :nombre\");\n    $stmt-&gt;execute(['nombre' =&gt; \"Usuario $i\"]);\n    echo \"Registro $i eliminado con \u00e9xito&lt;br&gt;\";\n}\n?&gt;\n</code></pre></p>"},{"location":"php/sql/#consultar-datos_1","title":"Consultar Datos","text":"<p>Selecciona y muestra todos los registros de la tabla <code>usuarios</code>. <pre><code>&lt;?php\n$stmt = $pdo-&gt;query(\"SELECT id, nombre, email FROM usuarios\");\nwhile ($row = $stmt-&gt;fetch(PDO::FETCH_ASSOC)) {\n    echo \"ID: \" . $row['id'] . \" - Nombre: \" . $row['nombre'] . \" - Email: \" . $row['email'] . \"&lt;br&gt;\";\n}\n?&gt;\n</code></pre></p>"},{"location":"php/sql/#5-cerrar-la-conexion","title":"5. Cerrar la Conexi\u00f3n","text":""},{"location":"php/sql/#mysqli","title":"MySQLi","text":"<pre><code>&lt;?php\n$conn-&gt;close(); // Cierra la conexi\u00f3n con MySQLi\n?&gt;\n</code></pre>"},{"location":"php/sql/#pdo","title":"PDO","text":"<pre><code>&lt;?php\n$pdo = null; // Cierra la conexi\u00f3n con PDO\n?&gt;\n</code></pre>"},{"location":"programacion/matematicas/","title":"Matem\u00e1ticas aplicadas a juegos","text":""},{"location":"programacion/matematicas/#formulas","title":"F\u00f3rmulas","text":""},{"location":"programacion/matematicas/#1-distancia-euclidiana","title":"1. Distancia Euclidiana","text":"<p>La distancia entre dos puntos \\((x_1, y_1)\\) y \\((x_2, y_2)\\) est\u00e1 dada por: $$ d = \\sqrt{(x_2 - x_1)^2 + (y_2 - y_1)^2} $$ Donde: - \\( x_1, y_1 \\) representan la posici\u00f3n del primer punto. - \\( x_2, y_2 \\) representan la posici\u00f3n del segundo punto.</p> <p>Ejemplo: Si un enemigo est\u00e1 en \\((3,4)\\) y el jugador en \\((6,8)\\), la distancia entre ellos es: $$ d = \\sqrt{(6 - 3)^2 + (8 - 4)^2} = \\sqrt{3^2 + 4^2} = \\sqrt{9 + 16} = \\sqrt{25} = 5 $$</p>"},{"location":"programacion/matematicas/#2-normalizacion-de-vectores","title":"2. Normalizaci\u00f3n de Vectores","text":"<p>Para normalizar un vector \\((dx, dy)\\): $$ \\text{longitud} = \\sqrt{dx^2 + dy^2} $$ $$ dx' = \\frac{dx}{\\text{longitud}}, \\quad dy' = \\frac{dy}{\\text{longitud}} $$ Donde: - \\( dx, dy \\) son las componentes del vector original. - \\( dx', dy' \\) son las componentes del vector normalizado.</p> <p>Ejemplo: Si un enemigo se mueve con un vector \\((3, 4)\\), su normalizaci\u00f3n es: $$ \\text{longitud} = \\sqrt{3^2 + 4^2} = 5 $$ $$ dx' = \\frac{3}{5} = 0.6, \\quad dy' = \\frac{4}{5} = 0.8 $$</p>"},{"location":"programacion/matematicas/#3-direccion-de-disparo","title":"3. Direcci\u00f3n de Disparo","text":"<p>Dado un enemigo en \\((x_e, y_e)\\) y el jugador en \\((x_p, y_p)\\), la direcci\u00f3n normalizada del disparo es: $$ dx = x_p - x_e, \\quad dy = y_p - y_e $$ $$ \\text{longitud} = \\sqrt{dx^2 + dy^2} $$ $$ dx' = \\frac{dx}{\\text{longitud}}, \\quad dy' = \\frac{dy}{\\text{longitud}} $$</p> <p>Ejemplo: Si un enemigo est\u00e1 en \\((2,3)\\) y el jugador en \\((5,7)\\), entonces: $$ dx = 5 - 2 = 3, \\quad dy = 7 - 3 = 4 $$ $$ \\text{longitud} = \\sqrt{3^2 + 4^2} = 5 $$ $$ dx' = 0.6, \\quad dy' = 0.8 $$</p>"},{"location":"programacion/matematicas/#4-disparo-en-ondas-angulos-en-circunferencia","title":"4. Disparo en Ondas (\u00c1ngulos en Circunferencia)","text":"<p>Para generar disparos en todas direcciones alrededor de un objeto: $$ \\theta_i = \\frac{2\\pi i}{N} $$ Donde \\(N\\) es el n\u00famero total de disparos en la onda.</p> <p>Ejemplo: Si se generan 8 disparos, los \u00e1ngulos ser\u00e1n: $$ \\theta_0 = 0, \\quad \\theta_1 = \\frac{2\\pi}{8}, \\quad \\theta_2 = \\frac{4\\pi}{8}, \\quad ... $$</p>"},{"location":"programacion/matematicas/#5-separacion-entre-enemigos","title":"5. Separaci\u00f3n entre Enemigos","text":"<p>Si dos enemigos est\u00e1n demasiado cerca, se repelen: $$ \\Delta x = x_1 - x_2, \\quad \\Delta y = y_1 - y_2 $$ $$ d = \\sqrt{\\Delta x^2 + \\Delta y^2} $$ Si \\( d &lt; d_{\\text{min}} \\), se aplica una fuerza de separaci\u00f3n: $$ \\Delta x' = \\frac{\\Delta x}{d} \\cdot F_{\\text{separaci\u00f3n}}, \\quad \\Delta y' = \\frac{\\Delta y}{d} \\cdot F_{\\text{separaci\u00f3n}} $$</p> <p>Ejemplo: Si dos enemigos est\u00e1n en \\((4,4)\\) y \\((5,6)\\), su distancia es: $$ d = \\sqrt{(5-4)^2 + (6-4)^2} = \\sqrt{1+4} = \\sqrt{5} $$ Si esta distancia es menor que el m\u00ednimo permitido, se aplica una fuerza de separaci\u00f3n.</p>"},{"location":"programacion/matematicas/#6-persecucion-del-jugador-por-enemigos","title":"6. Persecuci\u00f3n del Jugador por Enemigos","text":"<p>Si el jugador est\u00e1 dentro del rango de visi\u00f3n \\(R\\), la fuerza de atracci\u00f3n hacia \u00e9l es: $$ F_x = \\frac{x_p - x_e}{d} \\cdot F_{\\text{persecuci\u00f3n}}, \\quad F_y = \\frac{y_p - y_e}{d} \\cdot F_{\\text{persecuci\u00f3n}} $$</p> <p>Ejemplo: Si \\( F_{\\text{persecuci\u00f3n}} = 2 \\) y el enemigo est\u00e1 en \\((1,1)\\) mientras que el jugador en \\((4,5)\\), entonces: $$ d = \\sqrt{(4-1)^2 + (5-1)^2} = 5 $$ $$ F_x = \\frac{3}{5} \\times 2 = 1.2, \\quad F_y = \\frac{4}{5} \\times 2 = 1.6 $$</p>"},{"location":"programacion/matematicas/#7-colision-con-paredes","title":"7. Colisi\u00f3n con Paredes","text":"<p>Para encontrar el punto m\u00e1s cercano de una pared al jugador: $$ x_c = \\max(x_{\\text{pared}}, \\min(x_p, x_{\\text{pared}} + w_{\\text{pared}})) $$ $$ y_c = \\max(y_{\\text{pared}}, \\min(y_p, y_{\\text{pared}} + h_{\\text{pared}})) $$</p>"},{"location":"programacion/matematicas/#8-sistema-de-puntuacion-y-multiplicador","title":"8. Sistema de Puntuaci\u00f3n y Multiplicador","text":"<p>El puntaje aumenta en funci\u00f3n del multiplicador activo: $$ \\text{puntuaci\u00f3n} += 1 \\times M $$ Donde \\( M \\) es el multiplicador de puntaje, que temporalmente se duplica al recolectar ciertas frutas: $$ M = 2, \\quad \\text{durante } T \\text{ segundos} $$</p>"}]}