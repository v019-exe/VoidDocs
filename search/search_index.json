{"config":{"lang":["es"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Bienvenid@","text":"<p>Hola, lector, Bienvenid@ a mis docs, te dejo un peque\u00f1o resumen de lo que hay actualmente:</p> <ul> <li> <p>Programaci\u00f3n</p> <ul> <li>Introducci\u00f3n</li> <li>PHP<ul> <li>Introducci\u00f3n</li> <li>Conexiones a Bases de Datos</li> </ul> </li> <li>JS</li> <li>Python</li> </ul> </li> <li> <p>DevOps</p> <ul> <li>Docker</li> </ul> </li> <li> <p>Gesti\u00f3n de bases de datos</p> <ul> <li>Conceptos fundamentales</li> <li>Tipos de datos</li> <li>Modelos de bases de datos</li> <li>SQL: Lenguaje de consulta Estructurado</li> <li>Sintaxis b\u00e1sica y comandos esenciales</li> <li>Tipos de datos</li> <li>Creaci\u00f3n de tablas</li> <li>Relaciones entre tablas</li> <li>Claves primarias y for\u00e1neas</li> <li>Normalizaci\u00f3n y optimizaci\u00f3n</li> <li>Inserci\u00f3n de datos</li> <li>Actualizaci\u00f3n de registros</li> <li>Eliminaci\u00f3n de registros</li> <li>Consultas SELECT avanzadas</li> <li>\u00cdndices y Optimizaci\u00f3n de Consultas</li> <li>Optimizaci\u00f3n de consultas</li> <li>Permisos y roles</li> <li>Copias de seguridad y recuperaci\u00f3n</li> <li>Procedimientos Almacenados y Triggers</li> <li>Triggers</li> <li>Bases de Datos No Relacionales (NoSQL)<ul> <li>Introducci\u00f3n a NoSQL</li> <li>Tipos de bases NoSQL</li> </ul> </li> <li>Herramientas y Pr\u00e1cticas Avanzadas</li> <li>Replicaci\u00f3n y clustering</li> </ul> </li> <li></li> </ul>"},{"location":"devops/","title":"Introducci\u00f3n","text":"<p>DevOps es un enfoque moderno que combina el desarrollo de software (Development) y las operaciones de TI (Operations) para mejorar la colaboraci\u00f3n, la eficiencia y la entrega continua de aplicaciones y servicios. Su objetivo principal es automatizar procesos, acelerar los despliegues y asegurar una alta calidad en las entregas mediante la integraci\u00f3n constante de c\u00f3digo y la supervisi\u00f3n continua.</p> <p>A trav\u00e9s de estas pr\u00e1cticas, DevOps permite a los equipos ser m\u00e1s \u00e1giles y responder r\u00e1pidamente a los cambios del mercado, garantizando una infraestructura robusta y escalable. Los pilares fundamentales de DevOps incluyen la automatizaci\u00f3n, la integraci\u00f3n continua (CI), el despliegue continuo (CD), la monitorizaci\u00f3n constante y la infraestructura como c\u00f3digo (IaC).</p> <p>En estos apuntes, exploraremos herramientas clave, como Docker, Kubernetes, Jenkins y Terraform, junto con conceptos esenciales para implementar soluciones eficientes y automatizadas en el desarrollo y operaci\u00f3n de proyectos tecnol\u00f3gicos.</p>"},{"location":"devops/docker/dkfile/","title":"Gu\u00eda Completa de Dockerfile","text":""},{"location":"devops/docker/dkfile/#indice","title":"\u00cdndice","text":"<ul> <li>Introducci\u00f3n</li> <li>Sintaxis B\u00e1sica</li> <li>Instrucciones Principales</li> <li>Variables y Arguments</li> <li>Buenas Pr\u00e1cticas</li> <li>Ejemplos Pr\u00e1cticos</li> </ul>"},{"location":"devops/docker/dkfile/#introduccion","title":"Introducci\u00f3n","text":"<p>Un Dockerfile es un archivo de texto que contiene las instrucciones necesarias para construir una imagen de Docker. Cada instrucci\u00f3n en el Dockerfile crea una nueva capa en la imagen.</p>"},{"location":"devops/docker/dkfile/#sintaxis-basica","title":"Sintaxis B\u00e1sica","text":"<pre><code># Comentario\nINSTRUCCI\u00d3N argumentos\n</code></pre> <ul> <li>Las instrucciones no son sensibles a may\u00fasculas, pero por convenci\u00f3n se escriben en may\u00fasculas</li> <li>Cada instrucci\u00f3n crea una nueva capa en la imagen</li> <li>Los comentarios comienzan con <code>#</code></li> </ul>"},{"location":"devops/docker/dkfile/#instrucciones-principales","title":"Instrucciones Principales","text":""},{"location":"devops/docker/dkfile/#from","title":"FROM","text":"<p>Define la imagen base. <pre><code>FROM &lt;imagen&gt;:&lt;tag&gt;\nFROM ubuntu:20.04\nFROM node:14-alpine\n</code></pre></p>"},{"location":"devops/docker/dkfile/#label","title":"LABEL","text":"<p>Agrega metadatos a la imagen. <pre><code>LABEL version=\"1.0\"\nLABEL descripcion=\"Mi aplicaci\u00f3n\"\nLABEL mantenedor=\"nombre@email.com\"\n</code></pre></p>"},{"location":"devops/docker/dkfile/#env","title":"ENV","text":"<p>Define variables de entorno. <pre><code>ENV APP_HOME=/usr/src/app\nENV PORT=3000\n</code></pre></p>"},{"location":"devops/docker/dkfile/#arg","title":"ARG","text":"<p>Define variables para el proceso de construcci\u00f3n. <pre><code>ARG VERSION=latest\nARG BUILD_DATE\n</code></pre></p>"},{"location":"devops/docker/dkfile/#workdir","title":"WORKDIR","text":"<p>Establece el directorio de trabajo. <pre><code>WORKDIR /app\nWORKDIR $APP_HOME\n</code></pre></p>"},{"location":"devops/docker/dkfile/#copy","title":"COPY","text":"<p>Copia archivos desde el host a la imagen. <pre><code>COPY archivo.txt /app/\nCOPY [\"archivo con espacios.txt\", \"/app/\"]\nCOPY . .\n</code></pre></p>"},{"location":"devops/docker/dkfile/#add","title":"ADD","text":"<p>Similar a COPY, pero con funcionalidades adicionales. <pre><code>ADD archivo.tar.gz /app/\nADD https://ejemplo.com/archivo.zip /app/\n</code></pre></p>"},{"location":"devops/docker/dkfile/#run","title":"RUN","text":"<p>Ejecuta comandos durante la construcci\u00f3n. <pre><code>RUN apt-get update &amp;&amp; \\\n    apt-get install -y nginx\nRUN [\"npm\", \"install\"]\n</code></pre></p>"},{"location":"devops/docker/dkfile/#cmd","title":"CMD","text":"<p>Define el comando por defecto al ejecutar el contenedor. <pre><code>CMD [\"nginx\", \"-g\", \"daemon off;\"]\nCMD [\"npm\", \"start\"]\nCMD /script.sh\n</code></pre></p>"},{"location":"devops/docker/dkfile/#entrypoint","title":"ENTRYPOINT","text":"<p>Define el ejecutable principal del contenedor. <pre><code>ENTRYPOINT [\"nginx\"]\nENTRYPOINT [\"node\", \"app.js\"]\n</code></pre></p>"},{"location":"devops/docker/dkfile/#expose","title":"EXPOSE","text":"<p>Documenta los puertos que escucha el contenedor. <pre><code>EXPOSE 80\nEXPOSE 3000/tcp\nEXPOSE 53/udp\n</code></pre></p>"},{"location":"devops/docker/dkfile/#volume","title":"VOLUME","text":"<p>Define puntos de montaje para vol\u00famenes. <pre><code>VOLUME /data\nVOLUME [\"/data\", \"/logs\"]\n</code></pre></p>"},{"location":"devops/docker/dkfile/#user","title":"USER","text":"<p>Define el usuario para ejecutar comandos. <pre><code>USER nginx\nUSER 1000:1000\n</code></pre></p>"},{"location":"devops/docker/dkfile/#healthcheck","title":"HEALTHCHECK","text":"<p>Define comando para verificar la salud del contenedor. <pre><code>HEALTHCHECK --interval=30s --timeout=3s \\\n  CMD curl -f http://localhost/ || exit 1\n</code></pre></p>"},{"location":"devops/docker/dkfile/#shell","title":"SHELL","text":"<p>Define el shell por defecto para comandos. <pre><code>SHELL [\"/bin/bash\", \"-c\"]\n</code></pre></p>"},{"location":"devops/docker/dkfile/#stopsignal","title":"STOPSIGNAL","text":"<p>Define la se\u00f1al para detener el contenedor. <pre><code>STOPSIGNAL SIGTERM\n</code></pre></p>"},{"location":"devops/docker/dkfile/#variables-y-arguments","title":"Variables y Arguments","text":""},{"location":"devops/docker/dkfile/#variables-de-entorno","title":"Variables de Entorno","text":"<pre><code># Definici\u00f3n de variables\nENV APP_VERSION=1.0\nENV APP_PORT=3000\n\n# Uso de variables\nEXPOSE $APP_PORT\n</code></pre>"},{"location":"devops/docker/dkfile/#build-arguments","title":"Build Arguments","text":"<pre><code># Definici\u00f3n de argumentos\nARG BUILD_VERSION\nARG ENVIRONMENT=production\n\n# Uso de argumentos\nLABEL version=${BUILD_VERSION}\n</code></pre>"},{"location":"devops/docker/dkfile/#buenas-practicas","title":"Buenas Pr\u00e1cticas","text":""},{"location":"devops/docker/dkfile/#1-optimizacion-de-capas","title":"1. Optimizaci\u00f3n de Capas","text":"<pre><code># Mal\nRUN apt-get update\nRUN apt-get install -y nginx\nRUN apt-get clean\n\n# Bien\nRUN apt-get update &amp;&amp; \\\n    apt-get install -y nginx &amp;&amp; \\\n    apt-get clean &amp;&amp; \\\n    rm -rf /var/lib/apt/lists/*\n</code></pre>"},{"location":"devops/docker/dkfile/#2-multi-stage-builds","title":"2. Multi-stage Builds","text":"<pre><code># Etapa de compilaci\u00f3n\nFROM node:14 AS builder\nWORKDIR /app\nCOPY package*.json ./\nRUN npm install\nCOPY . .\nRUN npm run build\n\n# Etapa de producci\u00f3n\nFROM node:14-alpine\nWORKDIR /app\nCOPY --from=builder /app/dist ./dist\nCMD [\"node\", \"dist/main.js\"]\n</code></pre>"},{"location":"devops/docker/dkfile/#3-ordenamiento-de-capas","title":"3. Ordenamiento de Capas","text":"<pre><code># Ordenar de menos a m\u00e1s frecuentemente cambiante\nFROM node:14-alpine\n\n# 1. Instalar dependencias del sistema\nRUN apk add --no-cache python3\n\n# 2. Instalar dependencias de la aplicaci\u00f3n\nCOPY package*.json ./\nRUN npm install\n\n# 3. Copiar c\u00f3digo fuente\nCOPY . .\n</code></pre>"},{"location":"devops/docker/dkfile/#4-uso-de-dockerignore","title":"4. Uso de .dockerignore","text":"<pre><code># .dockerignore\nnode_modules\nnpm-debug.log\nDockerfile\n.git\n.gitignore\n</code></pre>"},{"location":"devops/docker/dkfile/#ejemplos-practicos","title":"Ejemplos Pr\u00e1cticos","text":""},{"location":"devops/docker/dkfile/#aplicacion-nodejs","title":"Aplicaci\u00f3n Node.js","text":"<pre><code>FROM node:14-alpine\n\n# Metadatos\nLABEL version=\"1.0.0\"\nLABEL description=\"Aplicaci\u00f3n Node.js de ejemplo\"\n\n# Variables de entorno\nENV NODE_ENV=production\nENV PORT=3000\n\n# Directorio de trabajo\nWORKDIR /usr/src/app\n\n# Instalaci\u00f3n de dependencias\nCOPY package*.json ./\nRUN npm ci --only=production\n\n# C\u00f3digo fuente\nCOPY . .\n\n# Puerto\nEXPOSE $PORT\n\n# Comando de inicio\nCMD [\"node\", \"server.js\"]\n</code></pre>"},{"location":"devops/docker/dkfile/#aplicacion-python-con-django","title":"Aplicaci\u00f3n Python con Django","text":"<pre><code>FROM python:3.9-slim\n\n# Variables de entorno\nENV PYTHONUNBUFFERED=1\nENV DJANGO_SETTINGS_MODULE=myproject.settings\n\n# Directorio de trabajo\nWORKDIR /app\n\n# Dependencias del sistema\nRUN apt-get update &amp;&amp; \\\n    apt-get install -y --no-install-recommends \\\n    gcc \\\n    postgresql-client \\\n    &amp;&amp; rm -rf /var/lib/apt/lists/*\n\n# Dependencias Python\nCOPY requirements.txt .\nRUN pip install --no-cache-dir -r requirements.txt\n\n# C\u00f3digo fuente\nCOPY . .\n\n# Puerto\nEXPOSE 8000\n\n# Comando de inicio\nCMD [\"gunicorn\", \"myproject.wsgi:application\", \"--bind\", \"0.0.0.0:8000\"]\n</code></pre>"},{"location":"devops/docker/dkfile/#aplicacion-java-con-maven","title":"Aplicaci\u00f3n Java con Maven","text":"<pre><code># Etapa de compilaci\u00f3n\nFROM maven:3.8-openjdk-11 AS builder\n\nWORKDIR /app\nCOPY pom.xml .\nCOPY src ./src\n\nRUN mvn clean package -DskipTests\n\n# Etapa de producci\u00f3n\nFROM openjdk:11-jre-slim\n\nWORKDIR /app\nCOPY --from=builder /app/target/*.jar app.jar\n\nEXPOSE 8080\nENTRYPOINT [\"java\", \"-jar\", \"app.jar\"]\n</code></pre>"},{"location":"devops/docker/dkfile/#variables-especiales","title":"Variables Especiales","text":""},{"location":"devops/docker/dkfile/#variables-predefinidas","title":"Variables Predefinidas","text":"<pre><code>ARG\n- ${}       # Referencia a variable\n- $?        # C\u00f3digo de salida del \u00faltimo comando\n- $$        # PID del shell actual\n</code></pre>"},{"location":"devops/docker/dkfile/#variables-en-tiempo-de-construccion","title":"Variables en Tiempo de Construcci\u00f3n","text":"<pre><code>ARG VERSION\nARG BUILD_DATE\nARG VCS_REF\n\nLABEL org.label-schema.version=$VERSION\nLABEL org.label-schema.build-date=$BUILD_DATE\nLABEL org.label-schema.vcs-ref=$VCS_REF\n</code></pre>"},{"location":"devops/docker/dkfile/#consejos-adicionales","title":"Consejos Adicionales","text":"<ol> <li>Seguridad</li> <li>Usar im\u00e1genes base oficiales</li> <li>Minimizar el n\u00famero de capas</li> <li>No incluir secretos en la imagen</li> <li> <p>Escanear vulnerabilidades</p> </li> <li> <p>Rendimiento</p> </li> <li>Usar cach\u00e9 de manera efectiva</li> <li>Minimizar el tama\u00f1o de la imagen</li> <li>Utilizar multi-stage builds</li> <li> <p>Optimizar el orden de las capas</p> </li> <li> <p>Mantenibilidad</p> </li> <li>Documentar el Dockerfile</li> <li>Usar variables para valores configurables</li> <li>Mantener consistencia en el estilo</li> <li> <p>Usar .dockerignore</p> </li> <li> <p>Debugging</p> </li> <li>Usar <code>docker history</code> para inspeccionar capas</li> <li>Implementar healthchecks</li> <li>Logging apropiado</li> <li>Documentar puertos y vol\u00famenes</li> </ol>"},{"location":"devops/docker/docker-comandos/","title":"Gu\u00eda de Referencia de Comandos Docker","text":""},{"location":"devops/docker/docker-comandos/#vision-general","title":"Visi\u00f3n General","text":"<p>Esta gu\u00eda completa cubre los comandos de Docker desde el uso b\u00e1sico hasta el avanzado, incluyendo gesti\u00f3n de contenedores, redes, vol\u00famenes y operaciones de Docker Swarm.</p>"},{"location":"devops/docker/docker-comandos/#comandos-basicos","title":"Comandos B\u00e1sicos","text":""},{"location":"devops/docker/docker-comandos/#informacion-del-sistema","title":"Informaci\u00f3n del Sistema","text":"<pre><code># Verificar la versi\u00f3n de Docker\ndocker --version\n\n# Mostrar informaci\u00f3n detallada del sistema\ndocker info\n\n# Mostrar la versi\u00f3n del cliente y servidor Docker\ndocker version\n\n# Obtener ayuda sobre los comandos de Docker\ndocker help\n</code></pre>"},{"location":"devops/docker/docker-comandos/#gestion-de-imagenes","title":"Gesti\u00f3n de Im\u00e1genes","text":""},{"location":"devops/docker/docker-comandos/#operaciones-basicas-con-imagenes","title":"Operaciones B\u00e1sicas con Im\u00e1genes","text":"<pre><code># Construir una imagen\ndocker build -t &lt;nombre_imagen&gt; &lt;ruta_dockerfile&gt;\n\n# Descargar una imagen del registro\ndocker pull &lt;nombre_imagen&gt;\n\n# Subir una imagen al registro\ndocker push &lt;nombre_imagen&gt;\n\n# Listar im\u00e1genes locales\ndocker images\n\n# Eliminar una imagen\ndocker rmi &lt;nombre_imagen&gt;\n\n# Etiquetar una imagen\ndocker tag &lt;nombre_imagen&gt; &lt;repositorio&gt;/&lt;nombre_imagen&gt;\n</code></pre>"},{"location":"devops/docker/docker-comandos/#operaciones-avanzadas-con-imagenes","title":"Operaciones Avanzadas con Im\u00e1genes","text":"<pre><code># Construir sin usar cach\u00e9\ndocker build --no-cache -t &lt;nombre_imagen&gt; &lt;ruta_dockerfile&gt;\n\n# Construir con argumentos de construcci\u00f3n\ndocker build --build-arg &lt;nombre_variable&gt;=&lt;valor&gt; -t &lt;nombre_imagen&gt; &lt;ruta_dockerfile&gt;\n\n# Ver historial de una imagen\ndocker history &lt;nombre_imagen&gt;\n\n# Exportar sistema de archivos de un contenedor\ndocker export &lt;nombre_contenedor&gt; &gt; &lt;archivo.tar&gt;\n\n# Importar sistema de archivos\ndocker import &lt;archivo.tar&gt;\n\n# Guardar imagen en archivo tar\ndocker save -o &lt;archivo.tar&gt; &lt;nombre_imagen&gt;\n\n# Cargar imagen desde archivo tar\ndocker load -i &lt;archivo.tar&gt;\n</code></pre>"},{"location":"devops/docker/docker-comandos/#gestion-de-contenedores","title":"Gesti\u00f3n de Contenedores","text":""},{"location":"devops/docker/docker-comandos/#operaciones-basicas-con-contenedores","title":"Operaciones B\u00e1sicas con Contenedores","text":"<pre><code># Ejecutar un contenedor\ndocker run [opciones] &lt;nombre_imagen&gt;\n\nOpciones comunes:\n-d                    # Modo desconectado (segundo plano)\n-p &lt;host&gt;:&lt;cont&gt;      # Mapeo de puertos\n--name &lt;nombre&gt;       # Asignar nombre al contenedor\n-v &lt;host&gt;:&lt;cont&gt;      # Montar volumen\n--network &lt;red&gt;       # Conectar a una red\n-e VARIABLE=valor     # Establecer variable de entorno\n</code></pre>"},{"location":"devops/docker/docker-comandos/#administracion-de-contenedores","title":"Administraci\u00f3n de Contenedores","text":"<pre><code># Listar contenedores en ejecuci\u00f3n\ndocker ps\n\n# Listar todos los contenedores\ndocker ps -a\n\n# Detener un contenedor\ndocker stop &lt;nombre_contenedor&gt;\n\n# Iniciar un contenedor\ndocker start &lt;nombre_contenedor&gt;\n\n# Reiniciar un contenedor\ndocker restart &lt;nombre_contenedor&gt;\n\n# Eliminar un contenedor\ndocker rm &lt;nombre_contenedor&gt;\n\n# Ejecutar comando en un contenedor\ndocker exec -it &lt;nombre_contenedor&gt; &lt;comando&gt;\n\n# Ver logs del contenedor\ndocker logs &lt;nombre_contenedor&gt;\n</code></pre>"},{"location":"devops/docker/docker-comandos/#redes","title":"Redes","text":""},{"location":"devops/docker/docker-comandos/#gestion-de-redes-docker","title":"Gesti\u00f3n de Redes Docker","text":"<pre><code># Listar redes\ndocker network ls\n\n# Crear una red\ndocker network create &lt;nombre_red&gt;\n\n# Inspeccionar una red\ndocker network inspect &lt;nombre_red&gt;\n\n# Conectar contenedor a una red\ndocker network connect &lt;nombre_red&gt; &lt;nombre_contenedor&gt;\n\n# Desconectar contenedor de una red\ndocker network disconnect &lt;nombre_red&gt; &lt;nombre_contenedor&gt;\n</code></pre>"},{"location":"devops/docker/docker-comandos/#volumenes","title":"Vol\u00famenes","text":""},{"location":"devops/docker/docker-comandos/#gestion-de-volumenes","title":"Gesti\u00f3n de Vol\u00famenes","text":"<pre><code># Listar vol\u00famenes\ndocker volume ls\n\n# Crear volumen\ndocker volume create &lt;nombre_volumen&gt;\n\n# Inspeccionar volumen\ndocker volume inspect &lt;nombre_volumen&gt;\n\n# Eliminar volumen\ndocker volume rm &lt;nombre_volumen&gt;\n</code></pre>"},{"location":"devops/docker/docker-comandos/#docker-compose","title":"Docker Compose","text":""},{"location":"devops/docker/docker-comandos/#operaciones-con-docker-compose","title":"Operaciones con Docker Compose","text":"<pre><code># Iniciar servicios\ndocker-compose up\n\n# Iniciar servicios en segundo plano\ndocker-compose up -d\n\n# Detener y eliminar servicios\ndocker-compose down\n\n# Construir servicios\ndocker-compose build\n\n# Ver logs de servicios\ndocker-compose logs\n\n# Ejecutar comando en un servicio\ndocker-compose exec &lt;servicio&gt; &lt;comando&gt;\n</code></pre>"},{"location":"devops/docker/docker-comandos/#administracion-del-sistema","title":"Administraci\u00f3n del Sistema","text":""},{"location":"devops/docker/docker-comandos/#mantenimiento-y-monitoreo","title":"Mantenimiento y Monitoreo","text":"<pre><code># Ver uso de disco\ndocker system df\n\n# Limpiar recursos no utilizados\ndocker system prune\n\n# Monitorear recursos en tiempo real\ndocker stats\n\n# Inspeccionar contenedor o imagen\ndocker inspect &lt;nombre&gt;\n\n# Ver eventos del sistema Docker\ndocker events\n</code></pre>"},{"location":"devops/docker/docker-comandos/#docker-swarm","title":"Docker Swarm","text":""},{"location":"devops/docker/docker-comandos/#gestion-de-cluster","title":"Gesti\u00f3n de Cl\u00faster","text":"<pre><code># Inicializar swarm\ndocker swarm init\n\n# Unirse a un swarm\ndocker swarm join --token &lt;token&gt; &lt;ip_manager&gt;:&lt;puerto&gt;\n\n# Crear un servicio\ndocker service create --name &lt;nombre_servicio&gt; &lt;imagen&gt;\n\n# Escalar un servicio\ndocker service scale &lt;nombre_servicio&gt;=&lt;n\u00famero_instancias&gt;\n\n# Desplegar stack\ndocker stack deploy -c &lt;archivo_compose&gt; &lt;nombre_stack&gt;\n\n# Eliminar stack\ndocker stack rm &lt;nombre_stack&gt;\n</code></pre>"},{"location":"devops/docker/docker-comandos/#comandos-avanzados","title":"Comandos Avanzados","text":""},{"location":"devops/docker/docker-comandos/#operaciones-especializadas","title":"Operaciones Especializadas","text":"<pre><code># Copiar archivos al contenedor\ndocker cp &lt;ruta_local&gt; &lt;nombre_contenedor&gt;:&lt;ruta_destino&gt;\n\n# Copiar archivos desde el contenedor\ndocker cp &lt;nombre_contenedor&gt;:&lt;ruta_origen&gt; &lt;ruta_local&gt;\n\n# Pausar contenedor\ndocker pause &lt;nombre_contenedor&gt;\n\n# Reanudar contenedor\ndocker unpause &lt;nombre_contenedor&gt;\n\n# Esperar a que termine un contenedor\ndocker wait &lt;nombre_contenedor&gt;\n</code></pre>"},{"location":"devops/docker/docker-comandos/#tips-y-mejores-practicas","title":"Tips y Mejores Pr\u00e1cticas","text":"<ul> <li>Usa nombres descriptivos para contenedores e im\u00e1genes</li> <li>Implementa l\u00edmites de recursos cuando sea necesario</li> <li>Utiliza vol\u00famenes para datos persistentes</li> <li>Mant\u00e9n las im\u00e1genes base actualizadas</li> <li>Implementa health checks en tus contenedores</li> <li>Usa redes personalizadas para aislar servicios</li> <li>Documenta las configuraciones de Docker Compose</li> </ul>"},{"location":"devops/docker/docker-compose/","title":"Estructura Detallada de Docker Compose","text":""},{"location":"devops/docker/docker-compose/#esquema-general","title":"Esquema General","text":"<p>Un archivo <code>docker-compose.yml</code> tiene la siguiente estructura jer\u00e1rquica:</p> <pre><code>version: \"3.9\"                    # Versi\u00f3n del formato de Docker Compose\n\nservices:                         # Definici\u00f3n de servicios/contenedores\n  servicio1:                     # Primer servicio\n    # configuraci\u00f3n del servicio\n  servicio2:                     # Segundo servicio\n    # configuraci\u00f3n del servicio\n\nnetworks:                        # Definici\u00f3n de redes\n  red1:                         # Primera red\n    # configuraci\u00f3n de la red\n  red2:                         # Segunda red\n    # configuraci\u00f3n de la red\n\nvolumes:                         # Definici\u00f3n de vol\u00famenes\n  volumen1:                     # Primer volumen\n    # configuraci\u00f3n del volumen\n  volumen2:                     # Segundo volumen\n    # configuraci\u00f3n del volumen\n\nconfigs:                         # Definici\u00f3n de configuraciones (modo Swarm)\n  config1:                      # Primera configuraci\u00f3n\n    # configuraci\u00f3n\n\nsecrets:                         # Definici\u00f3n de secretos (modo Swarm)\n  secreto1:                     # Primer secreto\n    # configuraci\u00f3n\n</code></pre>"},{"location":"devops/docker/docker-compose/#estructura-detallada-de-servicios","title":"Estructura Detallada de Servicios","text":"<pre><code>services:\n  servicio1:\n    # Especificaci\u00f3n de imagen\n    image: nginx:latest                      # Imagen a utilizar\n    build:                                   # O construir desde Dockerfile\n      context: ./dir                         # Contexto de construcci\u00f3n\n      dockerfile: Dockerfile.dev             # Archivo Dockerfile\n      args:                                  # Argumentos de construcci\u00f3n\n        buildno: 1\n        gitcommit: abc123\n\n    # Configuraci\u00f3n de contenedor\n    container_name: mi-servicio              # Nombre del contenedor\n    hostname: servicio1                      # Hostname dentro del contenedor\n    domainname: ejemplo.com                  # Nombre de dominio\n\n    # Networking\n    ports:                                   # Mapeo de puertos\n      - \"80:80\"                             # host:contenedor\n      - \"443:443\"\n    expose:                                  # Puertos expuestos sin publicar\n      - \"8080\"\n    networks:                                # Redes a las que se conecta\n      - red1\n      - red2\n\n    # Almacenamiento\n    volumes:                                 # Vol\u00famenes y bind mounts\n      - /var/lib/mysql                       # Volumen an\u00f3nimo\n      - db-data:/var/lib/mysql              # Volumen nombrado\n      - ./config:/etc/nginx/conf.d:ro       # Bind mount (solo lectura)\n\n    # Variables de entorno\n    environment:                             # Variables directas\n      - RACK_ENV=development\n      - SHOW=true\n    env_file:                               # Archivo de variables\n      - ./web-variables.env\n\n    # Dependencias\n    depends_on:                             # Dependencias de servicios\n      - db\n      - redis\n\n    # Pol\u00edticas de reinicio y actualizaci\u00f3n\n    restart: always                         # Pol\u00edtica de reinicio\n    deploy:                                 # Configuraci\u00f3n de despliegue\n      replicas: 3                          # N\u00famero de r\u00e9plicas\n      update_config:                       # Configuraci\u00f3n de actualizaciones\n        parallelism: 2\n        delay: 10s\n      resources:                           # L\u00edmites de recursos\n        limits:\n          cpus: '0.50'\n          memory: 512M\n        reservations:\n          cpus: '0.25'\n          memory: 256M\n\n    # Configuraci\u00f3n de salud\n    healthcheck:                           # Verificaci\u00f3n de salud\n      test: [\"CMD\", \"curl\", \"-f\", \"http://localhost\"]\n      interval: 30s\n      timeout: 10s\n      retries: 3\n      start_period: 40s\n\n    # Configuraci\u00f3n de usuario\n    user: postgres                         # Usuario para ejecutar el contenedor\n    working_dir: /app                      # Directorio de trabajo\n\n    # Comandos\n    entrypoint: /code/entrypoint.sh       # Punto de entrada\n    command: [\"php\", \"-d\", \"memory_limit=-1\", \"artisan\", \"serve\"]  # Comando\n\n    # DNS\n    dns:                                   # Servidores DNS\n      - 8.8.8.8\n      - 8.8.4.4\n    dns_search:                           # Dominios de b\u00fasqueda DNS\n      - dc1.example.com\n      - dc2.example.com\n\n    # Configuraci\u00f3n adicional\n    cap_add:                              # Agregar capacidades Linux\n      - ALL\n    cap_drop:                             # Quitar capacidades Linux\n      - NET_ADMIN\n      - SYS_ADMIN\n\n    # Logging\n    logging:                              # Configuraci\u00f3n de logs\n      driver: \"json-file\"\n      options:\n        max-size: \"200k\"\n        max-file: \"10\"\n</code></pre>"},{"location":"devops/docker/docker-compose/#estructura-detallada-de-redes","title":"Estructura Detallada de Redes","text":"<pre><code>networks:\n  red1:\n    driver: bridge                        # Driver de red (bridge, overlay, etc.)\n    driver_opts:                          # Opciones del driver\n      com.docker.network.bridge.name: mi-red\n    ipam:                                # Configuraci\u00f3n IP\n      driver: default\n      config:\n        - subnet: 172.28.0.0/16\n          ip_range: 172.28.5.0/24\n          gateway: 172.28.5.254\n    internal: true                       # Red interna sin acceso a Internet\n    attachable: true                     # Permite adjuntar contenedores manualmente\n    enable_ipv6: true                    # Habilita IPv6\n    labels:                              # Etiquetas\n      com.ejemplo.descripcion: \"Red frontend\"\n</code></pre>"},{"location":"devops/docker/docker-compose/#estructura-detallada-de-volumenes","title":"Estructura Detallada de Vol\u00famenes","text":"<pre><code>volumes:\n  volumen1:\n    driver: local                        # Driver de volumen\n    driver_opts:                         # Opciones del driver\n      type: nfs\n      o: addr=10.40.0.199,rw\n      device: \":/docker/ejemplo\"\n    external: false                      # Si el volumen es externo\n    labels:                             # Etiquetas\n      com.ejemplo.descripcion: \"Datos de la base de datos\"\n</code></pre>"},{"location":"devops/docker/docker-compose/#estructura-detallada-de-configs","title":"Estructura Detallada de Configs","text":"<pre><code>configs:\n  config1:\n    file: ./configs/app.conf            # Archivo de configuraci\u00f3n\n    external: false                     # Si la configuraci\u00f3n es externa\n    template:                          # Plantilla de configuraci\u00f3n\n      source: ./template.conf\n      target: /etc/nginx/nginx.conf\n</code></pre>"},{"location":"devops/docker/docker-compose/#estructura-detallada-de-secrets","title":"Estructura Detallada de Secrets","text":"<pre><code>secrets:\n  secreto1:\n    file: ./secrets/api_key.txt        # Archivo de secreto\n    external: true                     # Si el secreto es externo\n    name: production_api_key           # Nombre externo del secreto\n</code></pre>"},{"location":"devops/docker/docker-compose/#ejemplo-completo-integrado","title":"Ejemplo Completo Integrado","text":"<pre><code>version: \"3.9\"\n\nservices:\n  web:\n    image: nginx:latest\n    container_name: web-server\n    ports:\n      - \"80:80\"\n    networks:\n      - frontend\n    volumes:\n      - web-content:/usr/share/nginx/html\n    environment:\n      - NGINX_HOST=ejemplo.com\n    depends_on:\n      - api\n    healthcheck:\n      test: [\"CMD\", \"curl\", \"-f\", \"http://localhost\"]\n      interval: 30s\n    deploy:\n      replicas: 2\n      resources:\n        limits:\n          cpus: '0.5'\n          memory: 512M\n\n  api:\n    build:\n      context: ./api\n      dockerfile: Dockerfile\n    networks:\n      - frontend\n      - backend\n    environment:\n      - DB_HOST=db\n    depends_on:\n      - db\n    secrets:\n      - db_password\n\n  db:\n    image: postgres:13\n    volumes:\n      - db-data:/var/lib/postgresql/data\n    networks:\n      - backend\n    environment:\n      - POSTGRES_DB=miapp\n      - POSTGRES_PASSWORD_FILE=/run/secrets/db_password\n    configs:\n      - source: db_config\n        target: /etc/postgresql/postgresql.conf\n\nnetworks:\n  frontend:\n    driver: bridge\n  backend:\n    driver: bridge\n    internal: true\n\nvolumes:\n  web-content:\n  db-data:\n    driver: local\n\nconfigs:\n  db_config:\n    file: ./configs/postgresql.conf\n\nsecrets:\n  db_password:\n    file: ./secrets/db_password.txt\n</code></pre>"},{"location":"devops/docker/docker/","title":"Introducci\u00f3n a Docker","text":"<p>Docker es una plataforma de software que permite crear, distribuir y ejecutar aplicaciones en contenedores. Los contenedores son entornos ligeros, aislados y port\u00e1tiles que permiten ejecutar aplicaciones de forma consistente, sin importar el sistema operativo o la infraestructura en la que se ejecuten. Esto facilita enormemente el desarrollo, la distribuci\u00f3n y la ejecuci\u00f3n de software, mejorando la eficiencia, la portabilidad y la escalabilidad de las aplicaciones.</p>"},{"location":"devops/docker/docker/#conceptos-clave-de-docker","title":"Conceptos clave de Docker","text":""},{"location":"devops/docker/docker/#contenedores","title":"Contenedores","text":"<p>Son unidades de ejecuci\u00f3n ligeras e independientes que contienen todo lo necesario para ejecutar una aplicaci\u00f3n (c\u00f3digo, bibliotecas, dependencias, configuraciones, etc.). A diferencia de las m\u00e1quinas virtuales, los contenedores no requieren un sistema operativo completo, lo que los hace m\u00e1s eficientes en cuanto a recursos.</p>"},{"location":"devops/docker/docker/#docker-engine","title":"Docker Engine","text":"<p>Es el motor que ejecuta los contenedores. Est\u00e1 compuesto por dos componentes principales:</p> <ul> <li>Docker Daemon (dockerd): Un proceso que corre en segundo plano, gestionando los contenedores, im\u00e1genes, redes y vol\u00famenes.</li> <li>Docker CLI (Interfaz de L\u00ednea de Comandos): La herramienta de l\u00ednea de comandos utilizada para interactuar con Docker, enviando comandos al daemon para crear, ejecutar y gestionar contenedores e im\u00e1genes.</li> </ul>"},{"location":"devops/docker/docker/#imagenes","title":"Im\u00e1genes","text":"<p>Son plantillas de solo lectura que contienen el sistema de archivos necesario para ejecutar un contenedor. Las im\u00e1genes pueden ser creadas a partir de archivos de configuraci\u00f3n llamados <code>Dockerfile</code>, y pueden ser almacenadas en repositorios p\u00fablicos o privados.</p>"},{"location":"devops/docker/docker/#dockerfile","title":"Dockerfile","text":"<p>Es un archivo de texto que contiene instrucciones para construir una imagen de Docker. Define el sistema operativo base, las dependencias necesarias, los archivos a copiar y los comandos a ejecutar dentro del contenedor.</p>"},{"location":"devops/docker/docker/#docker-hub","title":"Docker Hub","text":"<p>Es un repositorio p\u00fablico donde se pueden almacenar y compartir im\u00e1genes de Docker. Docker Hub contiene miles de im\u00e1genes preconstruidas para facilitar el uso de tecnolog\u00edas populares, como bases de datos, servidores web, lenguajes de programaci\u00f3n, etc.</p>"},{"location":"devops/docker/docker/#redes-y-volumenes","title":"Redes y Vol\u00famenes","text":"<p>Docker permite definir redes virtuales para que los contenedores se comuniquen entre s\u00ed. Los vol\u00famenes son usados para almacenar datos persistentes que sobreviven a la vida \u00fatil de los contenedores.</p>"},{"location":"devops/docker/docker/#ventajas-de-usar-docker","title":"Ventajas de usar Docker","text":""},{"location":"devops/docker/docker/#portabilidad","title":"Portabilidad","text":"<p>Docker permite que las aplicaciones se ejecuten en cualquier entorno sin que se produzcan inconsistencias debidas a diferencias entre sistemas operativos o configuraciones de software.</p>"},{"location":"devops/docker/docker/#aislamiento","title":"Aislamiento","text":"<p>Los contenedores proporcionan un entorno aislado, lo que significa que los problemas de una aplicaci\u00f3n no afectan a otras aplicaciones que se ejecutan en el mismo sistema.</p>"},{"location":"devops/docker/docker/#escalabilidad-y-eficiencia","title":"Escalabilidad y eficiencia","text":"<p>Los contenedores son ligeros y pueden ser f\u00e1cilmente escalados. Son mucho m\u00e1s eficientes que las m\u00e1quinas virtuales porque comparten el mismo sistema operativo base, lo que ahorra recursos.</p>"},{"location":"devops/docker/docker/#desarrollo-mas-rapido","title":"Desarrollo m\u00e1s r\u00e1pido","text":"<p>Los desarrolladores pueden crear, probar y distribuir aplicaciones de manera m\u00e1s r\u00e1pida y fiable, asegurando que funcionen de la misma manera en todos los entornos (desarrollo, pruebas, producci\u00f3n).</p>"},{"location":"devops/docker/docker/#integracion-con-cicd","title":"Integraci\u00f3n con CI/CD","text":"<p>Docker se integra f\u00e1cilmente con herramientas de integraci\u00f3n continua (CI) y entrega continua (CD), facilitando la automatizaci\u00f3n del ciclo de vida del software y la entrega de nuevas versiones de manera continua.</p>"},{"location":"php/","title":"Introducci\u00f3n a PHP","text":"<p>Bienvenido a la secci\u00f3n de PHP, en esta secci\u00f3n te encontrar\u00e1s con todo lo esecial que necesitas saber sobre PHP.</p>"},{"location":"php/#variables","title":"Variables","text":"<p>Una variable en PHP es un contenedor que almacena un valor o una referencia a un valor en memoria. PHP es un lenguaje de tipado d\u00e9bil, lo que significa que las variables no necesitan declarar un tipo espec\u00edfico antes de usarlas, y el tipo se determina din\u00e1micamente en funci\u00f3n del valor asignado.</p> <pre><code>&lt;?php\n$nombre = \"VoidSec\";\n?&gt;\n</code></pre> <p>Adem\u00e1s, en PHP las variables pueden almacenar referencias a otros valores. Es decir, en lugar de almacenar directamente un valor, pueden apuntar a la direcci\u00f3n de memoria de otro dato, como ocurre con los arrays y objetos.</p>"},{"location":"php/#tipos-de-datos","title":"Tipos de datos","text":"<p>PHP tiene varios tipos de datos, que se pueden clasificar principalmente en tipos escalares y tipos compuestos. Seguidamente los explicamos:</p>"},{"location":"php/#tipos-escalares","title":"Tipos escalares","text":"<p>Los tipos escalares son aquellos que representan un solo valor. En otras palabras, un tipo escalar almacena un valor at\u00f3mico, es decir, no est\u00e1 compuesto por otros valores, sino que es una unidad indivisible.</p> <ol> <li> <p>Enteros (<code>int</code>, <code>integer</code>): Un entero es un n\u00famero sin decimales, ya sea positivo o negativo. <pre><code>&lt;?php\n$numero = 10;\n$numero = -5;\n?&gt;\n</code></pre></p> <ul> <li>Los valores enteros en PHP pueden ser n\u00fameros tanto positivos como negativos.</li> <li>No pueden contener decimales.</li> </ul> </li> <li> <p>Flotantes (<code>float</code>, <code>double</code>): Un flotante (o double) es un n\u00famero que tiene decimales. Los n\u00fameros con decimales son llamados flotantes porque su punto decimal puede \"flotar\" en cualquier parte del n\u00famero. <pre><code>&lt;?php\n$numero = 10.5;\n$numero = -5.25;\n?&gt;\n</code></pre></p> <ul> <li>Los flotantes son \u00fatiles para representar valores m\u00e1s precisos, como precios, temperaturas, etc.</li> <li>Pueden ser positivos o negativos y tienen decimales.</li> </ul> </li> <li> <p>Cadenas de texto (<code>string</code>): Una cadena (string) es un conjunto de caracteres, como palabras, frases o incluso n\u00fameros representados como texto. Las cadenas son muy utilizadas para trabajar con texto. <pre><code>&lt;?php\n$texto = \"Esto es una cadena de texto\";\n$texto_2 = \"Esto es otra cadena de texto\";\n?&gt;\n</code></pre></p> <ul> <li>Las cadenas pueden estar entre comillas dobles (\"texto\") o simples ('texto'), y pueden contener letras, n\u00fameros y caracteres especiales.</li> <li>Se usan mucho para representar nombres, direcciones, mensajes, etc.</li> </ul> </li> <li> <p>Booleanos (<code>bool</code>): Un booleano representa un valor de verdadero o falso (<code>true</code> o <code>false</code>). Se utiliza en condiciones o en estructuras de control de flujo, como <code>if</code>, para tomar decisiones. <pre><code>&lt;?php\n$esVerdadero = true;\n$esFalso = false;\n?&gt;\n</code></pre></p> <ul> <li>Los booleanos son muy \u00fatiles para la l\u00f3gica de programaci\u00f3n, especialmente en comparaciones o validaciones.</li> </ul> </li> </ol>"},{"location":"php/#tipos-compuestos","title":"Tipos compuestos","text":"<p>Los tipos compuestos son aquellos que pueden almacenar m\u00faltiples valores. A diferencia de los tipos escalares que solo almacenan un \u00fanico valor, los tipos compuestos agrupan varios valores, y esos valores pueden ser de diferentes tipos. En PHP, los tipos compuestos m\u00e1s comunes son arrays y objetos.</p> <ol> <li> <p>Arrays (<code>array</code>): Un array es una estructura de datos que puede almacenar varios valores, los cuales pueden ser de diferentes tipos. Los arrays pueden ser indexados (donde cada valor tiene un \u00edndice num\u00e9rico) o asociativos (donde cada valor est\u00e1 asociado a una clave personalizada).</p> <ul> <li>Array indexado: Los arrays indexados utilizan \u00edndices num\u00e9ricos (por defecto empiezan desde 0). <pre><code>&lt;?php\n$colores = [\"rojo\", \"verde\", \"azul\"];  // Un array indexado\necho $colores[0];  // Salida: rojo\n?&gt;\n</code></pre></li> <li>Array asociativo (<code>array</code>):  Los arrays asociativos permiten asociar valores a claves personalizadas. <pre><code>&lt;?php\n$persona = [\n    \"nombre\" =&gt; \"Juan\",\n    \"edad\" =&gt; 30,\n    \"ciudad\" =&gt; \"Madrid\"\n];  // Un array asociativo\necho $persona[\"nombre\"];  // Salida: Juan\n?&gt;\n</code></pre></li> <li>Objetos (<code>object</code>): Un objeto es una instancia de una clase. Las clases son plantillas o moldes que definen las propiedades y m\u00e9todos de los objetos. Los objetos se usan en la Programaci\u00f3n Orientada a Objetos (OOP) para agrupar datos y funcionalidades relacionadas. <pre><code>&lt;?php\nclass Persona {\n    public $nombre;\n    public $edad;\n\n    public function __construct($nombre, $edad) {\n        $this-&gt;nombre = $nombre;\n        $this-&gt;edad = $edad;\n    }\n\n    public function saludar() {\n        return \"Hola, mi nombre es \" . $this-&gt;nombre;\n    }\n}\n\n$persona1 = new Persona(\"Juan\", 30);  // Crear un objeto\necho $persona1-&gt;saludar();  // Salida: Hola, mi nombre es Juan\n?&gt;\n</code></pre></li> </ul> </li> </ol> <p>Un ejemplo ser\u00eda:</p> <pre><code>&lt;?php\n$a = 10;\n$b = &amp;$a;  // $b es una referencia a $a\n$b = 20;    // Cambia tanto $b como $a\necho $a;    // Salida: 20\n?&gt;\n</code></pre>"},{"location":"php/#tipos-de-variables-y-referencias","title":"Tipos de variables y referencias","text":"<p>PHP permite dos tipos de paso de datos: por valor y por referencia. En el paso por valor, se crea una copia del dato y se trabaja sobre ella. En el paso por referencia, las variables apuntan al mismo bloque de memoria, por lo que cualquier cambio realizado afectar\u00e1 al dato original.</p>"},{"location":"php/#operadores","title":"Operadores","text":"<p>Los operadores aritm\u00e9ticos permiten realizar operaciones matem\u00e1ticas en PHP. Adem\u00e1s de los operadores aritm\u00e9ticos, existen otros tipos de operadores, como los operadores de comparaci\u00f3n y los operadores l\u00f3gicos, que permiten realizar comparaciones y operar con valores booleanos, respectivamente.</p>"},{"location":"php/#operadores-aritmeticos","title":"Operadores aritm\u00e9ticos","text":"<pre><code>&lt;?php\n$a = 5;\n$b = 3;\necho $a + $b;  // Suma\necho $a - $b;  // Resta\necho $a * $b;  // Multiplicaci\u00f3n\necho $a / $b;  // Divisi\u00f3n\necho $a % $b;  // M\u00f3dulo (resto de la divisi\u00f3n)\necho $a ** $b; // Potencia (a elevado a la b)\n?&gt;\n</code></pre> <ul> <li> <p><code>+</code> : Suma</p> </li> <li> <p><code>-</code> : Resta</p> </li> <li> <p><code>*</code> : Multiplicaci\u00f3n</p> </li> <li> <p><code>/</code> : Divisi\u00f3n</p> </li> <li> <p><code>%</code> : M\u00f3dulo (resto de la divisi\u00f3n)</p> </li> <li> <p><code>**</code> : Potencia (a elevado a la b)</p> </li> </ul>"},{"location":"php/#operadores-de-comparacion","title":"Operadores de comparaci\u00f3n","text":"<pre><code>&lt;?php\n$a = 5;\n$b = 10;\necho $a == $b;  // Compara si son iguales\necho $a != $b;  // Compara si no son iguales\necho $a &lt; $b;   // Compara si $a es menor que $b\necho $a &gt; $b;   // Compara si $a es mayor que $b\necho $a &lt;= $b;  // Compara si $a es menor o igual que $b\necho $a &gt;= $b;  // Compara si $a es mayor o igual que $b\n?&gt;\n</code></pre> <ul> <li><code>==</code> : Compara si son iguales</li> <li><code>!=</code> : Compara si no son iguales</li> <li><code>&lt;</code> : Compara si $a es menor que $b</li> <li><code>&gt;</code> : Compara si $a es mayor que $b</li> <li><code>&lt;=</code> : Compara si $a es menor o igual que $b</li> <li><code>&gt;=</code> : Compara si $a es mayor o igual que $b</li> </ul>"},{"location":"php/#operadores-logicos","title":"Operadores L\u00f3gicos","text":"<pre><code>&lt;?php\n$a = true;\n$b = false;\necho $a &amp;&amp; $b;  // Y l\u00f3gico (ambas condiciones deben ser verdaderas)\necho $a || $b;  // O l\u00f3gico (al menos una condici\u00f3n debe ser verdadera)\necho !$a;       // Negaci\u00f3n l\u00f3gica (invierte el valor de la condici\u00f3n)\n?&gt;\n</code></pre> <ul> <li><code>&amp;&amp;</code> : Y l\u00f3gico (ambas condiciones deben ser verdaderas) (AND)</li> <li><code>||</code> : O l\u00f3gico (al menos una condici\u00f3n debe ser verdadera) (OR)</li> <li><code>!</code> : Negaci\u00f3n l\u00f3gica (invierte el valor de la condici\u00f3n) (NOT)</li> </ul>"},{"location":"php/#operadores-de-asignacion","title":"Operadores de asignaci\u00f3n","text":"<pre><code>&lt;?php\n$a = 5;\n$a += 3;  // Equivalente a $a = $a + 3;\n$a -= 2;  // Equivalente a $a = $a - 2;\n$a *= 4;  // Equivalente a $a = $a * 4;\n$a /= 2;  // Equivalente a $a = $a / 2;\n$a %= 3;  // Equivalente a $a = $a % 3;\n?&gt;\n</code></pre> <ul> <li><code>=</code>: Asignaci\u00f3n</li> <li><code>+=</code>: Suma y asignaci\u00f3n</li> <li><code>-=</code>: Resta y asignaci\u00f3n</li> <li><code>*=</code>: Multiplicaci\u00f3n y asignaci\u00f3n</li> <li><code>/=</code>: Divisi\u00f3n y asignaci\u00f3n</li> <li><code>%=</code>: M\u00f3dulo y asignaci\u00f3n</li> </ul>"},{"location":"php/#operadores-de-incremento-y-decremento","title":"Operadores de incremento y decremento","text":"<pre><code>&lt;?php\n$a = 5;\necho ++$a;  // Pre-incremento: incrementa antes de usar el valor\necho $a++;  // Post-incremento: usa el valor y luego lo incrementa\necho --$a;  // Pre-decremento: decrementa antes de usar el valor\necho $a--;  // Post-decremento: usa el valor y luego lo decrementa\n?&gt;\n</code></pre> <ul> <li><code>++$a</code>: Pre-incremento: incrementa antes de usar el valor</li> <li><code>$a++</code>: Post-incremento: usa el valor y luego lo incrementa</li> <li><code>--$a</code>: Pre-decremento: decrementa antes de usar el valor</li> <li><code>$a--</code>: Post-decremento: usa el valor y luego lo decrementa</li> </ul>"},{"location":"php/#operadores-de-cadena","title":"Operadores de Cadena","text":"<pre><code>&lt;?php\n$a = \"Hola\";\n$b = \"Mundo\";\necho $a . \" \" . $b;  // Concatena las cadenas\n?&gt;\n</code></pre> <ul> <li><code>.</code>: Concatena las cadenas</li> </ul>"},{"location":"php/#operadores-de-identidad","title":"Operadores de Identidad","text":"<pre><code>&lt;?php\n$a = 5;\n$b = \"5\";\necho $a === $b;  // Compara si $a y $b son id\u00e9nticos (mismo valor y tipo)\necho $a !== $b;  // Compara si $a y $b no son id\u00e9nticos (valor o tipo diferente)\n?&gt;\n</code></pre> <ul> <li><code>===</code>: Compara si $a y $b son id\u00e9nticos (mismo valor y tipo)</li> <li><code>!==</code>: Compara si $a y $b no son id\u00e9nticos (valor o tipo diferente)</li> </ul>"},{"location":"php/#operadores-de-tipo","title":"Operadores de tipo","text":"<pre><code>&lt;?php\n// Definici\u00f3n de variables con diferentes tipos de datos\n$a = 42;                 // Entero\n$b = \"Hello, World!\";    // Cadena\n$c = true;               // Booleano\n$d = [1, 2, 3];          // Array\n$e = new DateTime();     // Objeto\n$f = null;               // Nulo\n$g = 3.14159;            // Flotante\n$h = \"123\";              // Cadena num\u00e9rica\n\n// Verificaci\u00f3n de tipos con is_*() y demostraci\u00f3n de los resultados\necho \"\u00bf\\$a es un entero? \" . (is_int($a) ? 'S\u00ed' : 'No') . \"\\n\";               // Verifica si $a es un entero\necho \"\u00bf\\$b es una cadena? \" . (is_string($b) ? 'S\u00ed' : 'No') . \"\\n\";           // Verifica si $b es una cadena\necho \"\u00bf\\$c es un booleano? \" . (is_bool($c) ? 'S\u00ed' : 'No') . \"\\n\";             // Verifica si $c es un booleano\necho \"\u00bf\\$d es un array? \" . (is_array($d) ? 'S\u00ed' : 'No') . \"\\n\";               // Verifica si $d es un array\necho \"\u00bf\\$e es un objeto? \" . (is_object($e) ? 'S\u00ed' : 'No') . \"\\n\";             // Verifica si $e es un objeto\necho \"\u00bf\\$f es nulo? \" . (is_null($f) ? 'S\u00ed' : 'No') . \"\\n\";                   // Verifica si $f es nulo\necho \"\u00bf\\$g es num\u00e9rico? \" . (is_numeric($g) ? 'S\u00ed' : 'No') . \"\\n\";             // Verifica si $g es un n\u00famero\necho \"\u00bf\\$h es un flotante? \" . (is_float($h) ? 'S\u00ed' : 'No') . \"\\n\";            // Verifica si $h es un flotante\n\n// Verificaci\u00f3n de cadenas num\u00e9ricas y su conversi\u00f3n\necho \"\u00bf\\$h es num\u00e9rico (como cadena)? \" . (is_numeric($h) ? 'S\u00ed' : 'No') . \"\\n\"; // Verifica si $h es num\u00e9rico\n\n// Convertir cadena num\u00e9rica a entero y verificar el tipo\n$h_int = (int)$h;   // Convierte $h de cadena a entero\necho \"Valor de \\$h como entero: $h_int\\n\";\necho \"\u00bf\\$h_int es un entero? \" . (is_int($h_int) ? 'S\u00ed' : 'No') . \"\\n\";  // Verifica si la conversi\u00f3n fue exitosa\n?&gt;\n</code></pre> <ul> <li><code>is_int($a)</code>: Verifica si $a es un entero</li> <li><code>is_string($b)</code>: Verifica si $b es una cadena</li> <li><code>is_bool($c)</code>: Verifica si $c es un booleano</li> <li><code>is_array($d)</code>: Verifica si $d es un array</li> <li><code>is_object($e)</code>: Verifica si $e es un objeto</li> <li><code>is_null($f)</code>: Verifica si $f es un valor nulo</li> <li><code>is_numeric($g)</code>: Verifica si $g es un n\u00famero</li> <li><code>is_float($h)</code>: Verifica si $h es un flotante</li> </ul>"},{"location":"php/#condicionales","title":"Condicionales","text":"<p>Las condiciones en PHP se utilizan para ejecutar bloques de c\u00f3digo en funci\u00f3n de si una expresi\u00f3n es verdadera o falsa. Son fundamentales para controlar el flujo de ejecuci\u00f3n de un programa. Las estructuras de control m\u00e1s comunes en PHP son <code>if</code>, <code>else</code>, <code>elseif</code>, y <code>switch</code>.</p>"},{"location":"php/#condicionales-if","title":"Condicionales <code>if</code>","text":"<pre><code>&lt;?php\nif (expresi\u00f3n) {\n    // C\u00f3digo que se ejecuta si la expresi\u00f3n es verdadera\n}\n?&gt;\n</code></pre> <p>Pongamos un ejemplo: <pre><code>&lt;?php\n$edad = 18;\n\nif ($edad &gt;= 18) {\n    echo \"Eres mayor de edad.\";\n}\n?&gt;\n</code></pre></p> <p>Este ejemplo verifica si la variable <code>$edad</code> es mayor o igual a 18. Si es as\u00ed, se imprime el mensaje \"Eres mayor de edad.\".</p>"},{"location":"php/#condicionales-if-else","title":"Condicionales <code>if-else</code>","text":"<pre><code>&lt;?php\nif (expresi\u00f3n) {\n    // C\u00f3digo que se ejecuta si la expresi\u00f3n es verdadera\n} else {\n    // C\u00f3digo que se ejecuta si la expresi\u00f3n es falsa\n}\n?&gt;\n</code></pre> <p>Pongamos un ejemplo: <pre><code>&lt;?php\n$a = 2;\nif ($a &gt; 3) {\n    echo \"El valor de a es mayor que 3\";\n} else {\n    echo \"El valor de a no es mayor que 3\";\n}\n?&gt;\n</code></pre></p> <p>Aqu\u00ed, como <code>$a</code> es 2, la condici\u00f3n no se cumple, por lo que se imprimir\u00e1 \"El valor de a no es mayor que 3\".</p>"},{"location":"php/#condicionales-if-elseif-else","title":"Condicionales <code>if-elseif-else</code>","text":"<pre><code>&lt;?php\nif (expresi\u00f3n1) {\n    // C\u00f3digo si expresi\u00f3n1 es verdadera\n} elseif (expresi\u00f3n2) {\n    // C\u00f3digo si expresi\u00f3n2 es verdadera\n} else {\n    // C\u00f3digo si ninguna expresi\u00f3n es verdadera\n}\n?&gt;\n</code></pre> <p>Pongamos un ejemplo: <pre><code>&lt;?php\n$a = 10;\nif ($a &gt; 20) {\n    echo \"El valor de a es mayor que 20\";\n} elseif ($a == 10) {\n    echo \"El valor de a es igual a 10\";\n} else {\n    echo \"El valor de a es menor que 10\";\n}\n?&gt;\n</code></pre> En este caso, la salida ser\u00e1 \"El valor de a es igual a 10\", ya que la condici\u00f3n <code>elseif ($a == 10)</code> es verdadera.</p>"},{"location":"php/#condicionales-switch","title":"Condicionales <code>switch</code>","text":"<pre><code>&lt;?php\nswitch (expresi\u00f3n) {\n    case valor1:\n        // C\u00f3digo si la expresi\u00f3n es igual a valor1\n        break;\n    case valor2:\n        // C\u00f3digo si la expresi\u00f3n es igual a valor2\n        break;\n    default:\n        // C\u00f3digo si ninguno de los valores coincide\n}\n?&gt;\n</code></pre> <p>Pongamos un ejemplo: <pre><code>&lt;?php\n$dia = 2;\n\nswitch ($dia) {\n    case 1:\n        echo \"Hoy es lunes\";\n        break;\n    case 2:\n        echo \"Hoy es martes\";\n        break;\n    case 3:\n        echo \"Hoy es mi\u00e9rcoles\";\n        break;\n    default:\n        echo \"D\u00eda desconocido\";\n}\n?&gt;\n</code></pre> En este ejemplo, como <code>$dia</code> es 2, la salida ser\u00e1 \"Hoy es martes\". El <code>break</code> se utiliza para salir del bloque switch una vez que se ha encontrado el caso correspondiente.</p>"},{"location":"php/#condicionales-ternarias","title":"Condicionales ternarias","text":"<pre><code>&lt;?php\n(expresi\u00f3n) ? valor_si_verdadero : valor_si_falso;\n?&gt;\n</code></pre> <p>Pongamos un ejemplo: <pre><code>&lt;?php\n$a = 5;\necho ($a &gt; 3) ? \"Mayor que 3\" : \"No mayor que 3\";\n?&gt;\n</code></pre></p> <p>Este ejemplo imprimir\u00e1 \"Mayor que 3\" porque la condici\u00f3n <code>a &gt; 3</code> es verdadera.</p>"},{"location":"php/#condicionales-con-operadores-logicos","title":"Condicionales con operadores l\u00f3gicos","text":"<pre><code>&lt;?php\n$a = 5;\n$b = 10;\nif ($a &gt; 3 &amp;&amp; $b &gt; 5) {\n    echo \"Ambas condiciones son verdaderas\";\n}\n?&gt;\n</code></pre> <p>Aqu\u00ed, ambas condiciones deben ser verdaderas para que se ejecute el bloque de c\u00f3digo, por lo que se imprimir\u00e1 \"Ambas condiciones son verdaderas\".</p>"},{"location":"php/#bucles","title":"Bucles","text":"<p>Los bucles nos permiten ejecutar un bloque de c\u00f3digo repetidamente mientras se cumpla una condici\u00f3n. En PHP, los bucles m\u00e1s comunes son <code>for</code>, <code>while</code>, <code>do-while</code> y <code>foreach</code>.</p>"},{"location":"php/#bucles-for","title":"Bucles <code>for</code>","text":"<pre><code>&lt;?php\nfor (inicializaci\u00f3n; condici\u00f3n; incremento) {\n    // C\u00f3digo que se ejecuta en cada iteraci\u00f3n\n}\n?&gt;\n</code></pre> <p>Pongamos un ejemplo: <pre><code>&lt;?php\nfor ($i = 1; $i &lt;= 5; $i++) {\n    echo \"El valor de i es $i\\n\";\n}\n?&gt;\n</code></pre></p> <p>Este ejemplo imprimir\u00e1 los siguientes valores de <code>$i</code>: <pre><code>El valor de i es 1\nEl valor de i es 2\nEl valor de i es 3\nEl valor de i es 4\nEl valor de i es 5\n</code></pre></p>"},{"location":"php/#bucles-while","title":"Bucles <code>while</code>","text":"<pre><code>&lt;?php\nwhile (condici\u00f3n) {\n    // C\u00f3digo que se ejecuta mientras la condici\u00f3n sea verdadera\n}\n?&gt;\n</code></pre> <p>Pongamos un ejemplo: <pre><code>&lt;?php\n$i = 0;\nwhile ($i &lt; 5) {\n    echo \"El valor de i es: $i&lt;br&gt;\";\n    $i++;\n}\n?&gt;\n</code></pre></p>"},{"location":"php/#bucles-do-while","title":"Bucles <code>do-while</code>","text":"<pre><code>&lt;?php\ndo {\n    // C\u00f3digo que se ejecuta al menos una vez\n} while (condici\u00f3n);\n?&gt;\n</code></pre> <p>Pongamos un ejemplo: <pre><code>&lt;?php\n$i = 0;\ndo {\n    echo \"El valor de i es: $i&lt;br&gt;\";\n    $i++;\n} while ($i &lt; 5);\n?&gt;\n</code></pre></p> <p>Este bucle tambi\u00e9n imprimir\u00e1 los valores de $i desde 0 hasta 4.</p>"},{"location":"php/#bucles-foreach","title":"Bucles <code>foreach</code>","text":"<pre><code>&lt;?php\nforeach ($array as $valor) {\n    // C\u00f3digo que se ejecuta en cada iteraci\u00f3n\n}\n?&gt;\n</code></pre> <p>Si necesitas tanto el \u00edndice como el valor del array:</p> <p><pre><code>&lt;?php\nforeach ($array as $indice =&gt; $valor) {\n    // C\u00f3digo que se ejecuta en cada iteraci\u00f3n\n}\n?&gt;\n</code></pre> Pongamos ejemplo:</p> <p><pre><code>&lt;?php\n$colores = [\"rojo\", \"verde\", \"azul\"];\nforeach ($colores as $color) {\n    echo \"El color es: $color&lt;br&gt;\";\n}\n?&gt;\n</code></pre> Este bucle imprimir\u00e1 los valores \"rojo\", \"verde\" y \"azul\".</p>"},{"location":"php/#funciones","title":"Funciones","text":"<p>Una funci\u00f3n es un bloque de c\u00f3digo que realiza una tarea espec\u00edfica y siempre debe devolver un valor (aunque sea NULL por defecto si no se especifica expl\u00edcitamente un return). Puedes definir tus propias funciones y llamarlas cuando sea necesario.</p>"},{"location":"php/#definicion-de-funciones","title":"Definici\u00f3n de funciones","text":"<pre><code>&lt;?php\nfunction nombreDeLaFuncion() {\n    // C\u00f3digo que realiza la funci\u00f3n\n    return $resultado;  // Debe devolver algo\n}\n?&gt;\n</code></pre> <p>Pongamos un ejemplo: <pre><code>&lt;?php\nfunction saludar() {\n    return \"\u00a1Hola, mundo!\";  // La funci\u00f3n devuelve un valor\n}\n\necho saludar();  // Llamada a la funci\u00f3n y muestra el valor retornado\n?&gt;\n</code></pre></p>"},{"location":"php/#parametros-de-funciones","title":"Par\u00e1metros de funciones","text":"<p>Puedes pasar datos a las funciones utilizando par\u00e1metros. Estos valores son utilizados dentro de la funci\u00f3n y debe devolverse un valor.</p> <pre><code>&lt;?php\nfunction saludar($nombre) {\n    return \"\u00a1Hola, $nombre!\";  // La funci\u00f3n devuelve un valor\n}\n\necho saludar(\"Juan\");  // Llamada con par\u00e1metro\n?&gt;\n</code></pre>"},{"location":"php/#funciones-anonimas","title":"Funciones an\u00f3nimas","text":"<p>PHP tambi\u00e9n permite crear funciones sin nombre, conocidas como funciones an\u00f3nimas. A pesar de ser an\u00f3nimas, siempre deben devolver un valor si as\u00ed lo requiere el contexto.</p> <pre><code>&lt;?php\n$saludar = function($nombre) {\n    return \"\u00a1Hola, $nombre!\";  // Funci\u00f3n an\u00f3nima con retorno\n};\n\necho $saludar(\"Pedro\");  // Llamada a la funci\u00f3n an\u00f3nima\n?&gt;\n</code></pre> <p>Este ejemplo crea una funci\u00f3n an\u00f3nima y la almacena en la variable $saludar.</p>"},{"location":"php/#funciones-recursivas","title":"Funciones recursivas","text":"<p>Una funci\u00f3n recursiva es aquella que se llama a s\u00ed misma. Son \u00fatiles para resolver problemas que pueden dividirse en subproblemas m\u00e1s peque\u00f1os, como el c\u00e1lculo de factoriales o la b\u00fasqueda en estructuras de datos como \u00e1rboles. Y siempre deben retornar un valor.</p> <pre><code>&lt;?php\nfunction factorial($n) {\n    if ($n &lt;= 1) {\n        return 1;  // Caso base, retorna 1\n    } else {\n        return $n * factorial($n - 1);  // Llamada recursiva con retorno\n    }\n}\n\necho factorial(5);  // Imprime 120\n?&gt;\n</code></pre> <p>En este ejemplo, la funci\u00f3n <code>factorial()</code> se llama a s\u00ed misma, pero siempre retorna un valor.</p>"},{"location":"php/#funciones-incorporadas","title":"Funciones incorporadas","text":"<p>PHP tambi\u00e9n tiene muchas funciones incorporadas que puedes utilizar, como strlen() para obtener la longitud de una cadena, array_push() para agregar un elemento a un array, etc. Estas funciones tambi\u00e9n devuelven un valor.</p> <p><pre><code>&lt;?php\n$cadena = \"Hola\";\necho strlen($cadena);  // Devuelve 4, que es la longitud de la cadena\n?&gt;\n</code></pre> https://www.php.net/manual/es/indexes.functions.php</p>"},{"location":"php/sql/","title":"Conexi\u00f3n a Bases de Datos en PHP","text":"<p>Conectar PHP a bases de datos es esencial para crear aplicaciones web din\u00e1micas que puedan almacenar y recuperar informaci\u00f3n. En esta gu\u00eda cubriremos los pasos para conectarse a bases de datos y realizar operaciones b\u00e1sicas como insertar, modificar, eliminar y consultar datos, explicando en detalle qu\u00e9 hace cada parte del c\u00f3digo.</p>"},{"location":"php/sql/#1-conectar-a-mysql-usando-mysqli","title":"1. Conectar a MySQL Usando MySQLi","text":"<p>Ejemplo de Conexi\u00f3n: <pre><code>&lt;?php\n$servername = \"localhost\"; // Nombre del servidor de la base de datos\n$username = \"usuario\"; // Nombre de usuario de la base de datos\n$password = \"contrase\u00f1a\"; // Contrase\u00f1a del usuario\n$database = \"nombre_base_datos\"; // Nombre de la base de datos\n\n// Crear conexi\u00f3n\n$conn = new mysqli($servername, $username, $password, $database);\n\n// Comprobar conexi\u00f3n\nif ($conn-&gt;connect_error) {\n    die(\"Error de conexi\u00f3n: \" . $conn-&gt;connect_error); // Termina la ejecuci\u00f3n si la conexi\u00f3n falla\n}\n\necho \"Conexi\u00f3n exitosa\"; // Muestra un mensaje si la conexi\u00f3n es exitosa\n?&gt;\n</code></pre></p>"},{"location":"php/sql/#2-operaciones-basicas","title":"2. Operaciones B\u00e1sicas","text":""},{"location":"php/sql/#insertar-datos","title":"Insertar Datos","text":"<p>Este bucle inserta cinco registros en la tabla <code>usuarios</code>. <pre><code>for ($i = 1; $i &lt;= 5; $i++) {\n    $nombre = \"Usuario $i\"; // Genera un nombre para cada usuario\n    $email = \"usuario$i@example.com\"; // Genera un email para cada usuario\n    $sql = \"INSERT INTO usuarios (nombre, email) VALUES ('$nombre', '$email')\";\n    if ($conn-&gt;query($sql) === TRUE) {\n        echo \"Registro $i insertado con \u00e9xito&lt;br&gt;\";\n    } else {\n        echo \"Error: \" . $sql . \"&lt;br&gt;\" . $conn-&gt;error;\n    }\n}\n</code></pre></p>"},{"location":"php/sql/#modificar-datos","title":"Modificar Datos","text":"<p>Este bucle actualiza los correos electr\u00f3nicos de los cinco usuarios insertados anteriormente. <pre><code>for ($i = 1; $i &lt;= 5; $i++) {\n    $nuevo_email = \"modificado$i@example.com\"; // Nuevo email para cada usuario\n    $sql = \"UPDATE usuarios SET email='$nuevo_email' WHERE nombre='Usuario $i'\";\n    if ($conn-&gt;query($sql) === TRUE) {\n        echo \"Registro $i actualizado con \u00e9xito&lt;br&gt;\";\n    } else {\n        echo \"Error actualizando el registro $i: \" . $conn-&gt;error;\n    }\n}\n</code></pre></p>"},{"location":"php/sql/#eliminar-datos","title":"Eliminar Datos","text":"<p>Este bucle elimina los registros de los cinco usuarios. <pre><code>for ($i = 1; $i &lt;= 5; $i++) {\n    $sql = \"DELETE FROM usuarios WHERE nombre='Usuario $i'\";\n    if ($conn-&gt;query($sql) === TRUE) {\n        echo \"Registro $i eliminado con \u00e9xito&lt;br&gt;\";\n    } else {\n        echo \"Error eliminando el registro $i: \" . $conn-&gt;error;\n    }\n}\n</code></pre></p>"},{"location":"php/sql/#consultar-datos","title":"Consultar Datos","text":"<p>Este c\u00f3digo selecciona y muestra todos los registros de la tabla <code>usuarios</code>. <pre><code>$sql = \"SELECT id, nombre, email FROM usuarios\";\n$result = $conn-&gt;query($sql);\n\nif ($result-&gt;num_rows &gt; 0) {\n    while($row = $result-&gt;fetch_assoc()) {\n        echo \"ID: \" . $row[\"id\"] . \" - Nombre: \" . $row[\"nombre\"] . \" - Email: \" . $row[\"email\"] . \"&lt;br&gt;\";\n    }\n} else {\n    echo \"0 resultados\";\n}\n</code></pre></p>"},{"location":"php/sql/#3-conexion-usando-pdo","title":"3. Conexi\u00f3n usando PDO","text":"<p>Ejemplo de Conexi\u00f3n: <pre><code>&lt;?php\n$dsn = 'mysql:host=localhost;dbname=nombre_base_datos'; // Fuente de datos\n$username = 'usuario'; // Nombre de usuario\n$password = 'contrase\u00f1a'; // Contrase\u00f1a\n\ntry {\n    $pdo = new PDO($dsn, $username, $password);\n    $pdo-&gt;setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION); // Activar excepciones en errores\n    echo \"Conexi\u00f3n exitosa\";\n} catch (PDOException $e) {\n    echo \"Error de conexi\u00f3n: \" . $e-&gt;getMessage();\n}\n?&gt;\n</code></pre></p>"},{"location":"php/sql/#4-operaciones-con-pdo","title":"4. Operaciones con PDO","text":""},{"location":"php/sql/#insertar-datos_1","title":"Insertar Datos","text":"<p>Inserta cinco registros en la tabla <code>usuarios</code>. <pre><code>for ($i = 1; $i &lt;= 5; $i++) {\n    $stmt = $pdo-&gt;prepare(\"INSERT INTO usuarios (nombre, email) VALUES (:nombre, :email)\");\n    $stmt-&gt;execute(['nombre' =&gt; \"Usuario $i\", 'email' =&gt; \"usuario$i@example.com\"]);\n    echo \"Registro $i insertado con \u00e9xito&lt;br&gt;\";\n}\n</code></pre></p>"},{"location":"php/sql/#modificar-datos_1","title":"Modificar Datos","text":"<p>Actualiza los correos electr\u00f3nicos de los cinco usuarios. <pre><code>for ($i = 1; $i &lt;= 5; $i++) {\n    $stmt = $pdo-&gt;prepare(\"UPDATE usuarios SET email = :email WHERE nombre = :nombre\");\n    $stmt-&gt;execute(['email' =&gt; \"modificado$i@example.com\", 'nombre' =&gt; \"Usuario $i\"]);\n    echo \"Registro $i actualizado con \u00e9xito&lt;br&gt;\";\n}\n</code></pre></p>"},{"location":"php/sql/#eliminar-datos_1","title":"Eliminar Datos","text":"<p>Elimina los registros de los cinco usuarios. <pre><code>for ($i = 1; $i &lt;= 5; $i++) {\n    $stmt = $pdo-&gt;prepare(\"DELETE FROM usuarios WHERE nombre = :nombre\");\n    $stmt-&gt;execute(['nombre' =&gt; \"Usuario $i\"]);\n    echo \"Registro $i eliminado con \u00e9xito&lt;br&gt;\";\n}\n</code></pre></p>"},{"location":"php/sql/#consultar-datos_1","title":"Consultar Datos","text":"<p>Selecciona y muestra todos los registros de la tabla <code>usuarios</code>. <pre><code>$stmt = $pdo-&gt;query(\"SELECT id, nombre, email FROM usuarios\");\nwhile ($row = $stmt-&gt;fetch(PDO::FETCH_ASSOC)) {\n    echo \"ID: \" . $row['id'] . \" - Nombre: \" . $row['nombre'] . \" - Email: \" . $row['email'] . \"&lt;br&gt;\";\n}\n</code></pre></p>"},{"location":"php/sql/#5-cerrar-la-conexion","title":"5. Cerrar la Conexi\u00f3n","text":""},{"location":"php/sql/#mysqli","title":"MySQLi","text":"<pre><code>$conn-&gt;close(); // Cierra la conexi\u00f3n con MySQLi\n</code></pre>"},{"location":"php/sql/#pdo","title":"PDO","text":"<pre><code>$pdo = null; // Cierra la conexi\u00f3n con PDO\n</code></pre>"},{"location":"programacion/matematicas/","title":"Matem\u00e1ticas aplicadas a juegos","text":""},{"location":"programacion/matematicas/#formulas","title":"F\u00f3rmulas","text":""},{"location":"programacion/matematicas/#1-distancia-euclidiana","title":"1. Distancia Euclidiana","text":"<p>La distancia entre dos puntos \\((x_1, y_1)\\) y \\((x_2, y_2)\\) est\u00e1 dada por: $$ d = \\sqrt{(x_2 - x_1)^2 + (y_2 - y_1)^2} $$ Donde: - \\( x_1, y_1 \\) representan la posici\u00f3n del primer punto. - \\( x_2, y_2 \\) representan la posici\u00f3n del segundo punto.</p> <p>Ejemplo: Si un enemigo est\u00e1 en \\((3,4)\\) y el jugador en \\((6,8)\\), la distancia entre ellos es: $$ d = \\sqrt{(6 - 3)^2 + (8 - 4)^2} = \\sqrt{3^2 + 4^2} = \\sqrt{9 + 16} = \\sqrt{25} = 5 $$</p>"},{"location":"programacion/matematicas/#2-normalizacion-de-vectores","title":"2. Normalizaci\u00f3n de Vectores","text":"<p>Para normalizar un vector \\((dx, dy)\\): $$ \\text{longitud} = \\sqrt{dx^2 + dy^2} $$ $$ dx' = \\frac{dx}{\\text{longitud}}, \\quad dy' = \\frac{dy}{\\text{longitud}} $$ Donde: - \\( dx, dy \\) son las componentes del vector original. - \\( dx', dy' \\) son las componentes del vector normalizado.</p> <p>Ejemplo: Si un enemigo se mueve con un vector \\((3, 4)\\), su normalizaci\u00f3n es: $$ \\text{longitud} = \\sqrt{3^2 + 4^2} = 5 $$ $$ dx' = \\frac{3}{5} = 0.6, \\quad dy' = \\frac{4}{5} = 0.8 $$</p>"},{"location":"programacion/matematicas/#3-direccion-de-disparo","title":"3. Direcci\u00f3n de Disparo","text":"<p>Dado un enemigo en \\((x_e, y_e)\\) y el jugador en \\((x_p, y_p)\\), la direcci\u00f3n normalizada del disparo es: $$ dx = x_p - x_e, \\quad dy = y_p - y_e $$ $$ \\text{longitud} = \\sqrt{dx^2 + dy^2} $$ $$ dx' = \\frac{dx}{\\text{longitud}}, \\quad dy' = \\frac{dy}{\\text{longitud}} $$</p> <p>Ejemplo: Si un enemigo est\u00e1 en \\((2,3)\\) y el jugador en \\((5,7)\\), entonces: $$ dx = 5 - 2 = 3, \\quad dy = 7 - 3 = 4 $$ $$ \\text{longitud} = \\sqrt{3^2 + 4^2} = 5 $$ $$ dx' = 0.6, \\quad dy' = 0.8 $$</p>"},{"location":"programacion/matematicas/#4-disparo-en-ondas-angulos-en-circunferencia","title":"4. Disparo en Ondas (\u00c1ngulos en Circunferencia)","text":"<p>Para generar disparos en todas direcciones alrededor de un objeto: $$ \\theta_i = \\frac{2\\pi i}{N} $$ Donde \\(N\\) es el n\u00famero total de disparos en la onda.</p> <p>Ejemplo: Si se generan 8 disparos, los \u00e1ngulos ser\u00e1n: $$ \\theta_0 = 0, \\quad \\theta_1 = \\frac{2\\pi}{8}, \\quad \\theta_2 = \\frac{4\\pi}{8}, \\quad ... $$</p>"},{"location":"programacion/matematicas/#5-separacion-entre-enemigos","title":"5. Separaci\u00f3n entre Enemigos","text":"<p>Si dos enemigos est\u00e1n demasiado cerca, se repelen: $$ \\Delta x = x_1 - x_2, \\quad \\Delta y = y_1 - y_2 $$ $$ d = \\sqrt{\\Delta x^2 + \\Delta y^2} $$ Si \\( d &lt; d_{\\text{min}} \\), se aplica una fuerza de separaci\u00f3n: $$ \\Delta x' = \\frac{\\Delta x}{d} \\cdot F_{\\text{separaci\u00f3n}}, \\quad \\Delta y' = \\frac{\\Delta y}{d} \\cdot F_{\\text{separaci\u00f3n}} $$</p> <p>Ejemplo: Si dos enemigos est\u00e1n en \\((4,4)\\) y \\((5,6)\\), su distancia es: $$ d = \\sqrt{(5-4)^2 + (6-4)^2} = \\sqrt{1+4} = \\sqrt{5} $$ Si esta distancia es menor que el m\u00ednimo permitido, se aplica una fuerza de separaci\u00f3n.</p>"},{"location":"programacion/matematicas/#6-persecucion-del-jugador-por-enemigos","title":"6. Persecuci\u00f3n del Jugador por Enemigos","text":"<p>Si el jugador est\u00e1 dentro del rango de visi\u00f3n \\(R\\), la fuerza de atracci\u00f3n hacia \u00e9l es: $$ F_x = \\frac{x_p - x_e}{d} \\cdot F_{\\text{persecuci\u00f3n}}, \\quad F_y = \\frac{y_p - y_e}{d} \\cdot F_{\\text{persecuci\u00f3n}} $$</p> <p>Ejemplo: Si \\( F_{\\text{persecuci\u00f3n}} = 2 \\) y el enemigo est\u00e1 en \\((1,1)\\) mientras que el jugador en \\((4,5)\\), entonces: $$ d = \\sqrt{(4-1)^2 + (5-1)^2} = 5 $$ $$ F_x = \\frac{3}{5} \\times 2 = 1.2, \\quad F_y = \\frac{4}{5} \\times 2 = 1.6 $$</p>"},{"location":"programacion/matematicas/#7-colision-con-paredes","title":"7. Colisi\u00f3n con Paredes","text":"<p>Para encontrar el punto m\u00e1s cercano de una pared al jugador: $$ x_c = \\max(x_{\\text{pared}}, \\min(x_p, x_{\\text{pared}} + w_{\\text{pared}})) $$ $$ y_c = \\max(y_{\\text{pared}}, \\min(y_p, y_{\\text{pared}} + h_{\\text{pared}})) $$</p>"},{"location":"programacion/matematicas/#8-sistema-de-puntuacion-y-multiplicador","title":"8. Sistema de Puntuaci\u00f3n y Multiplicador","text":"<p>El puntaje aumenta en funci\u00f3n del multiplicador activo: $$ \\text{puntuaci\u00f3n} += 1 \\times M $$ Donde \\( M \\) es el multiplicador de puntaje, que temporalmente se duplica al recolectar ciertas frutas: $$ M = 2, \\quad \\text{durante } T \\text{ segundos} $$</p>"}]}